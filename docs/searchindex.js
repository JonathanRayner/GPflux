Search.setIndex({"docnames": ["_autosummary/gpflux", "api", "autoapi/gpflux/architectures/constant_input_dim_deep_gp/index", "autoapi/gpflux/architectures/index", "autoapi/gpflux/callbacks/index", "autoapi/gpflux/encoders/directly_parameterized_encoder/index", "autoapi/gpflux/encoders/index", "autoapi/gpflux/exceptions/index", "autoapi/gpflux/experiment_support/ci_utils/index", "autoapi/gpflux/experiment_support/index", "autoapi/gpflux/experiment_support/plotting/index", "autoapi/gpflux/experiment_support/tensorboard/index", "autoapi/gpflux/helpers/index", "autoapi/gpflux/index", "autoapi/gpflux/layers/basis_functions/fourier_features/base/index", "autoapi/gpflux/layers/basis_functions/fourier_features/index", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/gaussian/index", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/index", "autoapi/gpflux/layers/basis_functions/fourier_features/random/base/index", "autoapi/gpflux/layers/basis_functions/fourier_features/random/index", "autoapi/gpflux/layers/basis_functions/fourier_features/random/orthogonal/index", "autoapi/gpflux/layers/basis_functions/fourier_features/utils/index", "autoapi/gpflux/layers/basis_functions/index", "autoapi/gpflux/layers/bayesian_dense_layer/index", "autoapi/gpflux/layers/gp_layer/index", "autoapi/gpflux/layers/index", "autoapi/gpflux/layers/latent_variable_layer/index", "autoapi/gpflux/layers/likelihood_layer/index", "autoapi/gpflux/layers/trackable_layer/index", "autoapi/gpflux/losses/index", "autoapi/gpflux/math/index", "autoapi/gpflux/models/deep_gp/index", "autoapi/gpflux/models/index", "autoapi/gpflux/optimization/index", "autoapi/gpflux/optimization/keras_natgrad/index", "autoapi/gpflux/runtime_checks/index", "autoapi/gpflux/sampling/index", "autoapi/gpflux/sampling/kernel_with_feature_decomposition/index", "autoapi/gpflux/sampling/sample/index", "autoapi/gpflux/sampling/utils/index", "autoapi/gpflux/types/index", "autoapi/gpflux/version/index", "index", "notebooks/benchmarks", "notebooks/deep_cde", "notebooks/deep_gp_samples", "notebooks/efficient_posterior_sampling", "notebooks/efficient_sampling", "notebooks/gpflux_features", "notebooks/gpflux_with_keras_layers", "notebooks/intro", "notebooks/keras_integration", "notebooks/weight_space_approximation", "tutorials"], "filenames": ["_autosummary/gpflux.rst", "api.rst", "autoapi/gpflux/architectures/constant_input_dim_deep_gp/index.rst", "autoapi/gpflux/architectures/index.rst", "autoapi/gpflux/callbacks/index.rst", "autoapi/gpflux/encoders/directly_parameterized_encoder/index.rst", "autoapi/gpflux/encoders/index.rst", "autoapi/gpflux/exceptions/index.rst", "autoapi/gpflux/experiment_support/ci_utils/index.rst", "autoapi/gpflux/experiment_support/index.rst", "autoapi/gpflux/experiment_support/plotting/index.rst", "autoapi/gpflux/experiment_support/tensorboard/index.rst", "autoapi/gpflux/helpers/index.rst", "autoapi/gpflux/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/base/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/gaussian/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/random/base/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/random/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/random/orthogonal/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/utils/index.rst", "autoapi/gpflux/layers/basis_functions/index.rst", "autoapi/gpflux/layers/bayesian_dense_layer/index.rst", "autoapi/gpflux/layers/gp_layer/index.rst", "autoapi/gpflux/layers/index.rst", "autoapi/gpflux/layers/latent_variable_layer/index.rst", "autoapi/gpflux/layers/likelihood_layer/index.rst", "autoapi/gpflux/layers/trackable_layer/index.rst", "autoapi/gpflux/losses/index.rst", "autoapi/gpflux/math/index.rst", "autoapi/gpflux/models/deep_gp/index.rst", "autoapi/gpflux/models/index.rst", "autoapi/gpflux/optimization/index.rst", "autoapi/gpflux/optimization/keras_natgrad/index.rst", "autoapi/gpflux/runtime_checks/index.rst", "autoapi/gpflux/sampling/index.rst", "autoapi/gpflux/sampling/kernel_with_feature_decomposition/index.rst", "autoapi/gpflux/sampling/sample/index.rst", "autoapi/gpflux/sampling/utils/index.rst", "autoapi/gpflux/types/index.rst", "autoapi/gpflux/version/index.rst", "index.rst", "notebooks/benchmarks.ipynb", "notebooks/deep_cde.ipynb", "notebooks/deep_gp_samples.ipynb", "notebooks/efficient_posterior_sampling.ipynb", "notebooks/efficient_sampling.ipynb", "notebooks/gpflux_features.ipynb", "notebooks/gpflux_with_keras_layers.ipynb", "notebooks/intro.ipynb", "notebooks/keras_integration.ipynb", "notebooks/weight_space_approximation.ipynb", "tutorials.rst"], "titles": ["gpflux", "API reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.architectures.constant_input_dim_deep_gp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.architectures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.encoders.directly_parameterized_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.encoders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.experiment_support.ci_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.experiment_support</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.experiment_support.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.experiment_support.tensorboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.quadrature.gaussian</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.quadrature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.random.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.random</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.random.orthogonal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions.fourier_features.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.basis_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.bayesian_dense_layer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.gp_layer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.latent_variable_layer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.likelihood_layer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.layers.trackable_layer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.losses</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.math</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.models.deep_gp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.optimization.keras_natgrad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.runtime_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.sampling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.sampling.kernel_with_feature_decomposition</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.sampling.sample</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.sampling.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gpflux.version</span></code>", "Welcome to GPflux", "Benchmarks", "Deep Gaussian processes with Latent Variables", "Deep GP samples", "Efficient Posterior Gaussian Process Sampling", "Efficient sampling with Gaussian processes and Random Fourier Features", "Why GPflux is a modern (deep) GP library", "Hybrid Deep GP models: combining GP and Neural Network layers", "Introduction to GPflux", "Keras integration", "Weight Space Approximation with Random Fourier Features", "Tutorials"], "terms": {"The": [0, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 52], "librari": [0, 13, 42, 53], "root": [0, 13, 23, 25, 46], "see": [0, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 31, 32, 33, 34, 37, 38, 42, 44, 46, 47, 50], "deepgp": [0, 2, 3, 13, 25, 27, 29, 31, 32, 33, 34, 42, 44, 47, 48, 50, 51], "core": [0, 13, 46], "deep": [0, 2, 3, 12, 13, 23, 25, 26, 36, 38, 42, 43, 53], "gp": [0, 2, 3, 7, 12, 13, 24, 25, 26, 31, 32, 33, 34, 35, 36, 38, 42, 43, 46, 52, 53], "model": [0, 2, 3, 4, 5, 6, 13, 23, 25, 26, 27, 29, 33, 34, 42, 43, 44, 46, 50, 51, 52, 53], "which": [0, 4, 8, 10, 13, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 38, 44, 47, 48, 50, 51, 52], "i": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53], "built": [0, 13, 42, 52], "out": [0, 13, 42, 44, 48, 50], "differ": [0, 2, 3, 12, 13, 24, 25, 38, 43, 46, 47, 52], "layer": [0, 2, 3, 5, 6, 10, 12, 13, 29, 31, 32, 33, 34, 35, 36, 37, 42, 46, 51, 52, 53], "thi": [2, 3, 4, 5, 6, 7, 8, 10, 12, 15, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "provid": [2, 7, 14, 15, 16, 17, 18, 21, 23, 24, 25, 29, 31, 32, 36, 37, 42, 46, 47, 49, 52], "build_constant_input_dim_deep_gp": [2, 3, 48], "build": [2, 3, 12, 14, 15, 16, 17, 18, 19, 23, 25, 42, 49, 50, 52], "arbitrari": 2, "depth": [2, 37, 38, 50], "where": [2, 15, 18, 19, 24, 25, 36, 37, 38, 39, 46, 47, 48, 50, 52], "each": [2, 3, 4, 5, 6, 12, 25, 26, 31, 32, 35, 39, 44, 46, 52], "hidden": [2, 3], "ha": [2, 5, 6, 12, 15, 18, 19, 23, 25, 33, 34, 38, 46, 47, 49, 50, 51, 52], "same": [2, 3, 5, 6, 12, 24, 25, 26, 31, 32, 38, 42, 47, 50, 51, 52], "input": [2, 3, 5, 6, 10, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "dimension": [2, 3, 5, 6, 12, 15, 18, 19, 24, 25, 31, 32, 38, 42, 44, 45, 46, 47, 49, 50, 52], "data": [2, 3, 11, 12, 24, 25, 26, 27, 31, 32, 33, 34, 43, 46, 48, 49, 50, 52], "class": [2, 3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 44, 46, 47, 49, 50, 51, 52], "config": [2, 3, 14, 46, 47, 48, 49, 52], "sourc": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "configur": [2, 3, 49, 52], "us": [2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "num_induc": [2, 3, 12, 44, 48, 49, 50, 51], "int": [2, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 31, 32, 35, 42, 44, 50], "number": [2, 3, 5, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 31, 32, 35, 38, 44, 45, 46, 49, 50, 52], "induc": [2, 3, 12, 24, 25, 33, 34, 35, 38, 44, 47, 49, 50, 52], "variabl": [2, 3, 5, 6, 8, 12, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 35, 38, 47, 49, 50, 51, 52, 53], "m": [2, 3, 12, 14, 15, 18, 19, 20, 30, 38, 39, 42, 44, 45, 46], "inner_layer_qsqrt_factor": [2, 3, 48], "float": [2, 3, 18, 20, 23, 25], "A": [2, 3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 42, 46], "multipl": [2, 3, 7, 38, 42, 47], "factor": [2, 3, 23, 24, 25, 47, 48, 51], "rescal": [2, 3], "q_sqrt": [2, 3, 24, 25, 38, 44, 47, 49, 50, 51], "typic": [2, 3, 8, 12, 50], "valu": [2, 3, 5, 6, 12, 23, 25, 26, 29, 31, 32, 33, 34, 38, 44, 46, 47, 48, 49, 50, 52], "chosen": [2, 3, 12, 44, 52], "small": [2, 3, 44], "e": [2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 24, 25, 27, 29, 31, 32, 33, 34, 36, 37, 42, 44, 46, 47, 48, 52], "g": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 24, 25, 27, 29, 31, 32, 33, 34, 36, 37, 42, 46, 47, 48, 52], "1e": [2, 3, 5, 6, 23, 25, 44, 46, 47, 48, 51, 52], "5": [2, 3, 5, 6, 23, 25, 28, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "reduc": [2, 3, 36, 37, 48, 49], "nois": [2, 3, 44, 46, 52], "start": [2, 3, 44, 50, 52], "train": [2, 3, 4, 5, 6, 12, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 42, 43, 44, 46, 49, 50, 51, 52], "likelihood_noise_vari": [2, 3, 48], "varianc": [2, 3, 12, 15, 18, 19, 23, 24, 25, 27, 29, 31, 32, 43, 44, 45, 46, 48, 49, 52], "gaussian": [2, 3, 15, 17, 22, 24, 36, 37, 39, 42, 45, 49, 51, 52, 53], "likelihood": [2, 3, 4, 25, 27, 29, 31, 32, 42, 44, 47, 49, 50, 51, 52], "whiten": [2, 3, 24, 25, 38, 47, 48], "bool": [2, 3, 4, 8, 12, 23, 24, 25, 26, 27, 31, 32, 33, 34, 38], "true": [2, 3, 4, 8, 12, 23, 24, 25, 26, 27, 28, 33, 34, 37, 44, 45, 46, 47, 48, 49, 51, 52], "determin": [2, 3, 12, 23, 24, 25, 26, 30, 38, 52], "parameteris": [2, 3, 5, 6, 15, 18, 19, 24, 25, 26, 38, 44], "If": [2, 3, 4, 5, 6, 12, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 44, 52], "math": [2, 3, 13, 46], "p": [2, 3, 14, 15, 18, 19, 23, 24, 25, 27, 29, 31, 32, 38, 39, 46, 50, 52], "u": [2, 3, 15, 18, 19, 23, 24, 25, 33, 34, 52], "n": [2, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 30, 36, 37, 38, 39, 42, 45, 46, 48, 52], "0": [2, 3, 4, 5, 6, 12, 15, 18, 19, 23, 24, 25, 28, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "otherwis": [2, 3, 5, 6, 8, 12, 25, 26], "k_": [2, 3], "uu": [2, 3], "seealso": [2, 3], "gplayer": [2, 3, 7, 12, 24, 25, 27, 33, 34, 35, 42, 44, 45, 47, 49, 50, 51], "_construct_kernel": 2, "input_dim": [2, 3, 12, 23, 25, 31, 32, 47, 49, 51], "is_last_lay": 2, "gpflow": [2, 4, 5, 6, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 49, 50, 51, 52], "kernel": [2, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 35, 36, 37, 38, 42, 44, 45, 46, 49, 50, 52], "squaredexponenti": [2, 12, 42, 44, 45, 49, 50], "return": [2, 5, 6, 8, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 46, 47, 48, 49, 50, 51], "ard": 2, "lengthscal": [2, 12, 44, 45, 46, 49, 52], "set": [2, 4, 5, 6, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 33, 34, 44, 46, 51, 52], "2": [2, 4, 8, 12, 15, 18, 19, 25, 28, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "6": [2, 44, 45, 46, 47, 48, 49, 50, 51, 52], "part": [2, 29, 49, 52], "1": [2, 3, 10, 12, 18, 23, 25, 26, 28, 30, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "paramet": [2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 46, 47, 49, 50, 52], "whether": [2, 23, 24, 25, 42], "last": [2, 29, 33, 34, 45, 49, 52], "x": [2, 3, 10, 12, 15, 18, 19, 21, 31, 32, 36, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "numpi": [2, 3, 5, 6, 12, 23, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52], "ndarrai": [2, 3, 5, 6, 12, 23, 25], "num_lay": [2, 3, 45, 48], "consist": [2, 3, 23, 25, 31, 32, 36, 38, 47, 49], "": [2, 3, 4, 5, 6, 10, 11, 12, 15, 17, 18, 19, 20, 23, 24, 25, 26, 29, 31, 32, 33, 34, 36, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "all": [2, 3, 4, 12, 14, 15, 16, 17, 18, 31, 32, 33, 34, 35, 46, 51, 52], "have": [2, 3, 5, 6, 12, 25, 26, 27, 31, 32, 33, 34, 38, 42, 43, 46, 49, 50, 52], "dimens": [2, 3, 12, 23, 25, 30, 46, 49], "shape": [2, 3, 5, 6, 10, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 30, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "larg": [2, 3, 36, 37, 42, 46, 52], "base": [2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 44, 46, 47, 52], "salimbeni": [2, 3, 42, 44], "deisenroth": [2, 3, 42], "sd17": [2, 3, 42, 50], "most": [2, 3, 25, 26, 38, 46], "notabl": [2, 3], "being": [2, 3, 45, 49, 50], "we": [2, 3, 5, 6, 12, 14, 15, 16, 17, 18, 19, 24, 25, 26, 29, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "keep": [2, 3, 48, 50], "equal": [2, 3, 4, 12, 46, 52], "might": [2, 3, 12, 25, 26, 31, 32, 52], "slow": [2, 3, 4], "high": [2, 3, 12, 46], "assum": [2, 3, 5, 6, 12, 25, 26, 50, 52], "regress": [2, 3, 36, 37, 46, 50, 52], "task": [2, 3, 4], "specifi": [2, 3, 4, 7, 8, 12, 23, 25, 26, 31, 32, 45, 46, 47, 49, 50, 52], "perform": [2, 3, 44, 49, 50, 52], "other": [2, 3, 4, 8, 12, 31, 32, 33, 34, 35, 36, 37, 38, 46, 49, 50, 52], "classif": [2, 3], "retriev": [2, 3], "datapoint": [2, 3, 5, 6, 12, 24, 25, 26, 31, 32, 44, 50], "initialis": [2, 3, 4, 5, 6, 7, 12, 42], "point": [2, 3, 12, 14, 23, 24, 25, 26, 31, 32, 33, 34, 38, 44, 46, 52], "locat": [2, 3, 33, 34, 38, 44, 46, 47, 52], "k": [2, 3, 15, 18, 19, 36, 37, 38, 44, 46, 47, 52], "mean": [2, 3, 5, 6, 10, 12, 23, 24, 25, 26, 27, 31, 32, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52], "tensor": [2, 3, 5, 6, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 47, 48], "rank": [2, 3, 5, 6, 12, 36, 37], "two": [2, 3, 5, 6, 12, 25, 26, 38, 42, 44, 46, 49, 51, 52], "num_data": [2, 3, 5, 6, 12, 23, 24, 25, 31, 32, 42, 44, 45, 47, 49, 50, 51], "hyper": [2, 3], "detail": [2, 3, 20, 21, 31, 32, 33, 34, 44, 47, 50], "pre": 3, "constant_input_dim_deep_gp": [3, 13], "implement": [4, 5, 6, 23, 24, 26, 29, 31, 32, 33, 34, 38, 47, 50, 52], "enabl": [4, 36, 38, 46, 52], "monitor": [4, 47, 51], "modeltotensorboard": 4, "integr": [4, 8, 33], "kera": [4, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 42, 47, 48, 50], "tf": [4, 5, 6, 11, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "fit": [4, 24, 25, 27, 31, 32, 33, 34, 42, 48, 49, 50, 51], "method": [4, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 46, 50, 52], "tensorboard": [4, 9, 13, 48], "log_dir": 4, "str": [4, 11, 12, 24, 25, 26, 33, 34, 46, 52], "log": [4, 25, 27, 29, 43, 46, 48], "keywords_to_monitor": 4, "list": [4, 8, 10, 11, 12, 24, 25, 26, 31, 32, 33, 34, 40, 46, 50], "mean_funct": [4, 12, 24, 25, 35, 42, 44, 45, 47, 49, 50, 51], "max_siz": 4, "3": [4, 10, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "histogram_freq": 4, "write_graph": 4, "write_imag": 4, "fals": [4, 8, 12, 23, 24, 25, 26, 27, 28, 38, 44, 47, 49, 52], "update_freq": 4, "epoch": [4, 42, 44, 47, 48, 49, 50, 51], "profile_batch": 4, "embeddings_freq": 4, "embeddings_metadata": 4, "dict": [4, 24, 25], "none": [4, 5, 6, 10, 12, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 44, 46, 48, 49, 50, 52], "thin": [4, 52], "wrapper": 4, "around": 4, "also": [4, 5, 6, 12, 21, 23, 24, 25, 26, 33, 34, 46, 49, 50, 52], "call": [4, 5, 6, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 44, 47, 48, 49, 50, 51], "path": 4, "directori": 4, "save": 4, "file": [4, 42], "read": 4, "keyword": [4, 12, 31, 32], "name": [4, 12, 24, 25, 26, 28, 44, 49, 52], "includ": [4, 24, 25, 27, 29, 33, 34], "ani": [4, 5, 6, 12, 24, 25, 29, 30, 31, 32, 33, 34, 38, 46, 52], "ad": [4, 30, 50], "maximum": 4, "size": [4, 24, 25, 26, 44, 46, 47, 52], "arrai": [4, 5, 6, 12, 31, 32, 46], "inclus": 4, "element": [4, 5, 6, 12, 15, 18, 19, 25, 26, 33, 34, 50], "written": 4, "independ": 4, "scalar": [4, 11, 15, 18, 19, 46], "For": [4, 12, 25, 26, 33, 34, 36, 37, 38, 39, 42, 46], "inform": [4, 24, 25, 27, 31, 32, 36, 37, 42, 48], "argument": [4, 12, 25, 26, 29, 31, 32, 33, 34, 35, 45, 52], "tensorflow": [4, 25, 28, 33, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52], "doc": 4, "ar": [4, 6, 7, 12, 15, 18, 19, 24, 25, 29, 31, 32, 35, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 52], "follow": [4, 18, 24, 25, 33, 34, 38, 44, 46, 48, 52], "convent": 4, "whose": [4, 25, 26, 44], "match": [4, 11, 45, 49, 50], "either": [4, 25, 27, 29, 31, 32, 46], "an": [4, 5, 6, 7, 12, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 42, 44, 45, 46, 50, 52], "integ": [4, 20], "write": [4, 48], "loss": [4, 13, 23, 24, 25, 26, 27, 31, 32, 44, 47, 48, 49, 50, 51], "metric": [4, 29, 46], "everi": [4, 48], "th": 4, "batch": [4, 5, 6, 25, 26, 44], "when": [4, 7, 12, 18, 24, 25, 26, 27, 29, 31, 32, 33, 34, 38, 46, 48, 52], "them": [4, 25, 26, 33, 34, 47, 48, 50], "end": [4, 15, 18, 19, 39, 46, 52], "note": [4, 5, 6, 8, 18, 25, 26, 29, 33, 34, 45, 46, 49, 52], "too": 4, "frequent": 4, "can": [4, 5, 6, 7, 12, 15, 18, 19, 23, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52], "down": 4, "set_model": 4, "extend": 4, "kerasmodeltotensorboard": 4, "mimic": 4, "summari": 4, "on_train_batch_end": 4, "map": [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 33, 34], "index": [4, 10, 46], "within": [4, 34, 38, 40, 46, 52], "current": [4, 25, 27, 33], "result": [4, 43, 44, 46, 47, 52], "on_epoch_end": 4, "parametr": [5, 6, 44, 50], "latent": [5, 6, 7, 12, 24, 25, 26, 27, 31, 32, 35, 45, 49, 50, 53], "doe": [5, 31, 32, 46, 49], "work": [5, 8, 33, 34, 38, 45, 47, 48, 49, 50], "mini": [5, 6], "directlyparameterizednormaldiag": [5, 6, 7, 44], "latent_dim": [5, 6], "trackablelay": [5, 6, 23, 25, 26, 27, 28, 29, 47, 49, 50, 51], "direct": [5, 6, 52], "normal": [5, 6, 12, 14, 15, 16, 17, 18, 19, 39, 44, 46, 49, 52], "distribut": [5, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 33, 34, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52], "posterior": [5, 6, 23, 24, 25, 26, 27, 36, 38, 42, 44, 47, 52, 53], "standard": [5, 6, 12, 25, 26, 46, 52], "deviat": [5, 6, 12, 29, 44], "field": [5, 6, 12, 23, 25, 26], "creat": [5, 6, 12, 15, 16, 17, 18, 19, 31, 32, 42, 44, 46, 47, 48, 49, 50, 52], "learn": [5, 6, 36, 37, 42, 47, 48, 52], "dure": [5, 6, 25, 26, 31, 32, 48, 50], "type": [5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 31, 32, 38, 46, 47], "computation": [5, 6, 46], "veri": [5, 6, 47, 48, 50], "effici": [5, 6, 15, 19, 20, 36, 37, 38, 42, 52, 53], "larger": [5, 6], "dataset": [5, 6, 12, 23, 24, 25, 31, 32, 42, 43, 44, 46, 52], "greatli": [5, 6], "simplifi": [5, 6], "becaus": [5, 6, 12, 25, 27, 29, 31, 32, 38, 44, 46, 47, 50, 52], "neural": [5, 6, 12, 23, 25, 36, 37, 42, 53], "network": [5, 6, 12, 23, 25, 44, 53], "requir": [5, 6, 12, 24, 25, 26, 29, 31, 32, 46, 51, 52], "amort": [5, 6, 25, 26, 44], "No": [5, 6], "associ": [5, 6, 36, 37, 44], "compat": [5, 6, 12, 31, 32, 35, 47, 49, 50], "dutordoir": [5, 6, 36, 37, 42, 44], "et": [5, 6, 23, 25, 36, 37, 38, 44, 46, 52], "al": [5, 6, 23, 25, 36, 37, 38, 44, 46, 52], "dshd18": [5, 6, 25, 26, 42, 44], "more": [5, 6, 12, 15, 18, 19, 20, 30, 31, 32, 33, 34, 38, 45, 46, 47, 48, 52], "thorough": [5, 6, 47], "explan": [5, 6, 47, 51], "directli": [5, 6, 24, 25, 26, 33, 34, 47, 48, 49, 50, 51], "diagon": [5, 6, 24, 25, 30, 46], "multivari": [5, 6, 39, 46, 52], "across": [5, 6, 12, 46, 52], "approxim": [5, 6, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 36, 37, 38, 46, 47, 53], "w": [5, 6, 21, 24, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52], "default": [5, 6, 12, 23, 24, 25, 26, 27, 31, 32, 45, 49, 50], "np": [5, 6, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "random": [5, 6, 14, 15, 16, 17, 21, 22, 25, 26, 36, 37, 38, 42, 44, 45, 46, 53], "randn": [5, 6, 44], "01": [5, 6, 42, 44, 47, 48, 49, 50, 51], "should": [5, 6, 12, 24, 25, 26, 27, 33, 34, 52], "row": [5, 6, 52], "contain": [5, 6, 8, 11, 12, 25, 27, 30, 31, 32, 33, 39, 46, 48, 50], "consequ": [5, 6, 46], "std": [5, 6, 43, 44, 48, 49, 50, 52], "covari": [5, 6, 10, 24, 25, 30, 36, 37, 38, 39, 45, 46], "squar": [5, 6, 12, 15, 18, 19, 20, 23, 25, 44, 46], "matrix": [5, 6, 12, 30, 39, 46], "ones": [5, 6, 44, 46, 47, 52], "tensortyp": [5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39], "arg": [5, 6, 24, 25, 33, 34], "kwarg": [5, 6, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 33, 34], "tupl": [5, 6, 24, 25, 26, 27, 31, 32, 35, 48], "latentvariablelay": [6, 25, 26, 31, 32, 44], "over": [6, 23, 24, 25, 26, 39, 46, 48, 52], "directly_parameterized_encod": [6, 13], "custom": [7, 33, 34], "gplayerincompatibilityexcept": [7, 35], "rais": [7, 31, 32, 35], "misconfigur": 7, "caus": 7, "reason": [7, 46], "common": [7, 21], "incompat": [7, 35], "wrong": 7, "inducingvari": [7, 38], "meanfunct": [7, 12, 24, 25, 35], "initi": [7, 12, 23, 25], "self": 7, "help": [7, 45, 46, 49], "accur": [7, 15, 19, 20, 52], "signatur": 7, "encoderinitializationerror": 7, "encod": [7, 13, 25, 26, 44], "correctli": 7, "util": [8, 9, 13, 15, 22, 25, 28, 30, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52], "experi": [8, 9, 43, 46, 52], "notebook": [8, 9, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 52], "is_continuous_integr": 8, "code": [8, 12, 43, 50, 52], "run": [8, 42, 43, 48], "continu": 8, "ci": 8, "machin": [8, 36, 37, 42, 46, 52], "check": [8, 31, 32, 35, 40, 42], "environ": 8, "github": 8, "action": 8, "circleci": 8, "jenkin": 8, "function": [8, 9, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 46, 47, 49, 50, 52], "mai": [8, 24, 25], "expect": [8, 25, 27, 29, 46, 50], "under": [8, 25, 27, 46, 52], "framework": [8, 42, 46, 47], "notebook_nit": 8, "test_n": 8, "smaller": [8, 12], "iter": [8, 11, 46, 48, 52], "notebook_rang": 8, "rang": [8, 44, 45, 46, 47, 48, 52], "shorter": 8, "length": 8, "notebook_list": 8, "lst": 8, "subset": 8, "from": [8, 10, 12, 15, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52], "complet": [8, 46], "ci_util": [9, 13, 51], "plot_lay": [10, 45], "layer_input": [10, 25, 26, 45], "cov": [10, 30, 39, 45], "sampl": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 42, 44, 52], "idx": 10, "ax": [10, 44, 45, 46, 48, 49, 50, 52], "sequenc": 10, "matplotlib": [10, 44, 45, 46, 47, 48, 49, 50, 51, 52], "pyplot": [10, 44, 45, 46, 47, 48, 49, 50, 51, 52], "origin": [10, 21, 25, 26, 30, 48], "dgp": [10, 42, 43, 44, 47, 50, 51], "output": [10, 12, 14, 23, 24, 25, 26, 27, 29, 31, 32, 38, 42, 43, 44, 45, 49, 50], "label": [10, 46, 51, 52], "event": 11, "minim": [11, 52], "hold": [11, 23, 24, 25, 38, 46, 52], "tensorboard_event_iter": 11, "file_pattern": 11, "yield": 11, "preprocess": 11, "string": 11, "vector": [11, 39, 52], "repres": [11, 25, 26, 36, 37, 38, 47, 50, 52], "filenam": 11, "glob": 11, "shell": 11, "wildcard": 11, "pattern": [11, 31, 32], "construct": [12, 24, 25, 31, 32, 33, 34, 47, 49, 50], "multioutputkernel": [12, 24, 25, 35], "multioutputinducingvari": [12, 24, 25, 35], "object": [12, 25, 26, 27, 29, 40, 46, 47, 48, 50, 52], "construct_basic_kernel": [12, 45], "output_dim": [12, 18, 23, 25, 45, 49, 50, 51], "share_hyperparam": [12, 45], "singl": [12, 24, 25, 26, 33, 34, 42], "pass": [12, 24, 25, 26, 31, 32, 33, 34, 36, 37, 44, 46, 48, 50, 51], "depend": [12, 24, 25, 26, 31, 32], "hyperparamet": [12, 33, 34, 48, 52], "share": [12, 14], "you": [12, 24, 25, 26, 29, 31, 32, 33, 34, 36, 38, 42, 46, 50, 52], "must": [12, 14, 15, 16, 17, 18, 23, 25, 29, 31, 32, 33, 34, 46], "separ": [12, 31, 32], "separateindepend": 12, "onli": [12, 24, 25, 26, 27, 31, 32, 36, 37, 44, 45, 46, 49, 50, 52], "len": [12, 45, 46, 49, 50, 52], "exponenti": [12, 15, 18, 19, 44], "matern12": 12, "so": [12, 14, 15, 16, 17, 18, 27, 37, 44, 45, 49, 50, 52], "construct_basic_inducing_vari": [12, 45], "share_vari": [12, 45], "z_init": [12, 45, 51], "inducing_vari": [12, 24, 25, 35, 38, 42, 44, 47, 49, 50, 52], "total": [12, 44, 49, 50], "freeli": 12, "user": [12, 50], "gener": [12, 45, 46, 52], "advic": 12, "possibl": [12, 24, 25, 52], "than": [12, 15, 18, 19, 20, 29, 52], "comput": [12, 14, 15, 16, 17, 18, 19, 25, 26, 27, 30, 36, 37, 42, 46, 47, 50], "complex": [12, 46, 47], "cubic": [12, 38, 46], "featur": [12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 31, 32, 35, 36, 37, 38, 42, 46, 48, 49, 53], "correspond": [12, 25, 26, 30, 31, 32, 36, 37, 44, 48], "inducingpoint": [12, 42, 44, 47, 49, 50, 52], "z": [12, 18, 24, 25, 42, 44, 45, 46, 47, 49, 50, 51, 52], "target": [12, 25, 26, 27, 31, 32, 40, 42, 44, 46, 47, 48, 50, 51], "y": [12, 25, 27, 29, 31, 32, 42, 44, 46, 47, 48, 49, 50, 51, 52], "redund": 12, "contradict": 12, "raw": 12, "ithat": 12, "three": [12, 46, 49, 52], "construct_mean_funct": 12, "d_in": 12, "d_out": 12, "ident": [12, 15, 18, 19, 23, 24, 25, 44, 45, 48, 49, 50, 51], "princip": 12, "compon": [12, 14, 15, 16, 17, 18, 19, 20], "linear": [12, 24, 25, 49], "untrain": 12, "To": [12, 18, 29, 31, 32, 38, 42, 45, 46, 48, 49, 52], "chang": [12, 24, 25, 26, 46], "set_train": [12, 44, 47, 52], "construct_gp_lay": [12, 51], "kernel_class": [12, 46, 52], "stationari": [12, 14, 15, 18, 19, 46, 50, 52], "gp_layer": [12, 13, 25, 33, 34, 44, 45, 47, 49, 50], "vanilla": [12, 38, 42, 46, 52], "among": 12, "zero": [12, 23, 25, 42, 43, 44, 45, 46, 47, 48, 50, 52], "pick": 12, "simpl": [12, 42, 46, 48, 49, 50], "exampl": [12, 24, 25, 26, 31, 32, 36, 37, 46, 48, 52], "lambda": 12, "_": [12, 15, 18, 19, 25, 26, 27, 29, 39, 46, 47, 51, 52], "period": 12, "It": [12, 27, 38, 47, 49, 50, 51, 52], "make_dataclass_from_class": 12, "dataclass": 12, "instanc": [12, 29, 31, 32, 33, 34, 38, 47, 51], "updat": [12, 44, 46, 47, 48, 49, 50, 51, 52], "take": [12, 25, 26, 48], "regular": [12, 33, 34], "superset": 12, "decor": 12, "kei": [12, 50], "supersed": 12, "xavier_initialization_numpi": [12, 23, 25], "weight": [12, 15, 18, 19, 23, 25, 37, 38, 42, 46, 47, 48, 53], "given": [12, 24, 25, 40], "xavier": 12, "glorot": 12, "yoshua": 12, "bengio": 12, "understand": [12, 45], "difficulti": 12, "feedforward": 12, "proceed": [12, 42], "thirteenth": 12, "intern": [12, 36, 37, 42, 52], "confer": [12, 36, 37, 42], "artifici": [12, 42], "intellig": [12, 42], "statist": [12, 36, 37, 42, 44, 50], "jmlr": 12, "workshop": 12, "2010": 12, "draw": [12, 18, 20, 23, 24, 25, 26, 38, 39, 46, 52], "centr": [12, 24, 25], "sqrt": [12, 15, 18, 19, 44, 46, 47, 48, 49, 50, 51, 52], "text": [12, 39, 44, 46, 48, 50, 52], "architectur": [13, 48], "experiment_support": [13, 45], "basis_funct": [13, 25, 46, 47, 52], "fourier_featur": [13, 22, 25, 46, 47, 52], "bayesian_dense_lay": [13, 25], "latent_variable_lay": [13, 25], "likelihood_lay": [13, 25, 31, 32, 42, 44, 47, 50, 51], "trackable_lay": [13, 23, 25, 26, 27], "deep_gp": [13, 32, 47, 48], "optim": [13, 31, 32, 42, 44, 47, 48, 49, 50, 51, 52], "keras_natgrad": [13, 33], "kernel_with_feature_decomposit": [13, 36, 38, 46, 52], "callback": [13, 33, 34, 47, 51], "except": 13, "helper": [13, 45, 46, 47, 49, 50, 51], "runtime_check": 13, "version": [13, 25, 28, 42, 44, 47, 49, 50, 51], "basi": [14, 15, 16, 17, 18, 19, 22, 52], "fourierfeaturesbas": [14, 15, 16, 17, 18], "n_compon": [14, 15, 16, 17, 18, 19, 20, 46, 52], "abc": [14, 38], "fourier": [14, 15, 16, 17, 18, 19, 20, 21, 36, 37, 38, 46, 53], "both": [14, 15, 16, 17, 18, 25, 27, 29, 31, 32, 36, 37, 46, 50, 52], "quadratur": [14, 15, 18, 19, 20, 22, 25], "subclass": [14, 15, 16, 17, 18, 25, 26, 31, 32, 47, 49, 50, 51], "mont": [14, 15, 16, 17, 18, 19, 20], "carlo": [14, 15, 16, 17, 18, 19, 20], "node": [14, 15, 16, 17, 18, 19, 20], "etc": [14, 15, 16, 17, 18, 19, 20, 48], "numer": [14, 15, 16, 17, 18, 19, 20, 30, 46], "evalu": [14, 31, 32, 36, 37, 38, 42, 46, 47, 50, 52], "d": [14, 15, 16, 17, 18, 19, 23, 24, 25, 30, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 51, 52], "multioutput": [14, 24, 25, 35, 42], "case": [14, 31, 32, 36, 37, 44, 50, 52], "compute_output_shap": 14, "input_shap": [14, 15, 16, 17, 18, 19, 23, 25], "shapetyp": [14, 15, 16, 17, 18, 19, 20, 23, 25, 40], "tensorshap": 14, "get_config": 14, "abstract": [14, 25, 26, 38], "_compute_const": [14, 15, 16, 17, 18, 19], "constant": [14, 15, 16, 17, 18, 19, 36, 37, 46], "_compute_bas": [14, 15, 16, 17, 18, 19], "kernelwithfeaturedecomposit": [15, 36, 37, 38, 46, 47, 52], "quadraturefourierfeatur": [15, 16, 17], "2m": [15, 16, 17, 18, 19, 51], "orthogonalrandomfeatur": [15, 19, 20], "randomfourierfeatur": [15, 18, 19, 20], "orthogon": [15, 19, 42], "orf": [15, 19, 20], "ysc": [15, 19, 20, 42], "16": [15, 19, 20, 42, 46, 47, 48, 49, 50, 51], "randomfourierfeaturesbas": [15, 18, 19], "rff": [15, 18, 19, 21, 47], "essenti": [15, 18, 19], "approach": [15, 18, 19, 38, 44, 50], "rr07": [15, 18, 19, 21, 42], "realiz": [15, 18, 19], "bochner": [15, 18, 19, 36, 37, 46, 52], "theorem": [15, 18, 19, 36, 37, 46, 52], "sum": [15, 18, 19, 36, 37], "mathbf": [15, 18, 19], "phi": [15, 18, 19, 46, 52], "top": [15, 18, 19, 45], "mathbb": [15, 18, 19, 25, 27, 29, 52], "r": [15, 18, 19, 24, 25, 46, 52], "finit": [15, 18, 19, 36, 37, 46, 47, 52], "defin": [15, 18, 19, 31, 32, 44, 49, 52], "frac": [15, 18, 19, 52], "sigma": [15, 18, 19, 46, 52], "ell": [15, 18, 19], "begin": [15, 18, 19, 39, 46], "bmatrix": [15, 18, 19], "co": [15, 18, 19, 23, 24, 25, 52], "boldsymbol": [15, 18, 19, 46, 52], "theta": [15, 18, 19], "_1": [15, 18, 19, 46], "sin": [15, 18, 19], "vdot": [15, 18, 19], "sim": [15, 18, 19, 38, 46, 52], "spectral": [15, 18, 19, 52], "densiti": [15, 18, 19, 42, 43, 44, 52], "At": [15, 18, 19], "least": [15, 18, 19], "variant": [15, 18, 19], "desir": [15, 18, 19, 52], "theoret": [15, 18, 19], "properti": [15, 18, 19, 33, 34, 36, 37, 38, 47, 50], "its": [15, 18, 19, 24, 25, 27, 31, 32, 36, 37, 48, 49, 52], "counterpart": [15, 18, 19], "form": [15, 18, 19, 36, 37, 39, 46, 52], "phase": [15, 18, 19], "shift": [15, 18, 19, 44, 49], "cosin": [15, 18, 19], "randomfourierfeaturescosin": [15, 18, 19, 46, 47, 52], "ss15": [15, 18, 19, 21, 42], "tau": [15, 18, 19], "_m": [15, 18, 19], "mathcal": [15, 18, 19, 46, 52], "pi": [15, 18, 19, 52], "equival": [15, 18, 19], "elementari": [15, 18, 19], "trigonometr": [15, 18, 19], "decompositon": 16, "coeffici": [16, 17, 19, 36, 37, 38, 47], "gauss": 16, "christoffel": 16, "aka": 16, "qff": 17, "_sample_students_t": 18, "nu": [18, 20], "dtype": [18, 20, 25, 26, 28, 31, 32, 44, 46, 47, 48, 49, 52], "central": 18, "student": 18, "t": [18, 20, 24, 25, 44, 45, 47, 48], "beta": 18, "gamma": [18, 20, 51], "rate": [18, 48], "parameter": 18, "studentst": 18, "commonli": 18, "chi2": 18, "epsilon": [18, 46, 52], "becom": [18, 47, 52], "obviou": 18, "static": [18, 31, 32, 40, 48], "rff_constant": 18, "_sample_chi_squar": 20, "chi": 20, "degre": 20, "freedom": 20, "http": 20, "mathworld": 20, "wolfram": 20, "com": 20, "squareddistribut": 20, "html": 20, "further": 20, "regard": 20, "relationship": 20, "_sample_chi": 20, "_ceil_divid": 20, "b": [20, 21, 30, 44, 45, 50, 52], "ceil": 20, "divis": 20, "smallest": 20, "decomposit": [21, 36, 37, 46], "_bases_cosin": 21, "prescrib": 21, "rahimi": [21, 36, 37, 42, 46, 52], "recht": [21, 36, 37, 42, 46, 52], "2007": [21, 36, 37, 42, 46, 52], "addit": [21, 31, 32], "_bases_concat": 21, "bayesiandenselay": [23, 25], "variat": [23, 24, 25, 26, 27, 29, 42, 50, 52], "bayesian": [23, 25, 47, 52], "dens": [23, 25, 49], "fulli": [23, 25, 26], "connect": [23, 25], "w_mu": [23, 25], "w_sqrt": [23, 25], "activ": [23, 25, 49], "callabl": [23, 25, 38, 47], "is_mean_field": [23, 25], "temperatur": [23, 25], "0001": [23, 25], "cool": [23, 25], "heat": [23, 25], "exclud": [23, 25], "bia": [23, 25, 49], "scale": [23, 24, 25, 31, 32, 36, 37, 38, 42, 46, 52], "kl": [23, 24, 25, 26, 31, 32, 48], "regularis": [23, 25], "choleski": [23, 24, 25, 30, 46, 52], "As": [23, 25, 42, 46, 47, 49, 50, 51], "suggest": [23, 25], "how": [23, 25, 33, 34, 42, 45, 46, 47, 49, 52], "good": [23, 25, 44, 46], "bay": [23, 25], "realli": [23, 25], "wenzel": [23, 25], "2020": [23, 25, 36, 37, 42, 47, 48, 49, 50, 51], "cold": [23, 25], "4": [23, 25, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "necessari": [23, 25, 27, 44, 52], "first": [23, 25, 42, 46, 49, 52], "predict_sampl": [23, 25], "num_sampl": [23, 24, 25, 44, 45, 52], "test": [23, 24, 25, 27, 31, 32, 43, 46, 47, 49, 50, 51, 52], "q": [23, 24, 25, 27, 29, 33, 34, 46], "predict": [23, 24, 25, 26, 29, 31, 32, 43, 46, 47, 48, 49, 50, 52], "els": [23, 25, 45, 52], "meanandvari": [23, 25, 33, 34], "behaviour": [23, 24, 25, 44], "upon": [23, 24, 25], "prior_kl": [23, 24, 25], "diverg": [23, 24, 25, 26], "prior": [23, 24, 25, 26, 44, 46, 47, 49, 50, 51, 52], "w_sqrt\u00b2": [23, 25], "spars": [24, 25, 36, 37, 42, 50, 52], "process": [24, 36, 37, 42, 45, 49, 52, 53], "full_cov": [24, 25, 27, 31, 32, 45, 46], "full_output_cov": [24, 25, 27, 31, 32], "num_latent_gp": [24, 25, 42, 44, 47, 49, 50], "verbos": [24, 25, 42, 44, 47, 48, 49, 50, 51], "tfp": [24, 25, 26, 27, 29, 40, 44, 49], "distributionlambda": [24, 25, 26, 27], "appli": [24, 25, 35], "want": [24, 25, 26, 29, 31, 32, 33, 34, 51], "instead": [24, 25, 27, 29, 30, 47, 48, 49, 50, 51], "convert": [24, 25], "_convert_to_tensor_fn": [24, 25], "Will": [24, 25, 28], "store": [24, 25, 43, 46, 48], "attribut": [24, 25, 29, 31, 32], "without": [24, 25, 52], "prefix": [24, 25], "margin": [24, 25, 27], "respect": [24, 25, 26, 36, 37, 46, 47, 52], "full": [24, 25, 30, 44, 45], "linearcoregion": [24, 25], "q_mu": [24, 25, 38, 44, 47, 49, 50, 52], "infer": [24, 25, 26, 42, 44, 46, 50, 52], "mode": [24, 25, 26], "show": [24, 25, 42, 44, 45, 46, 47, 49, 51, 52], "debug": [24, 25], "obtain": [24, 25, 31, 32, 38, 45, 46, 47, 52], "correct": [24, 25, 27, 31, 32], "between": [24, 25, 31, 32, 37, 46, 52], "term": [24, 25, 31, 32, 46, 52], "evid": [24, 25, 31, 32], "lower": [24, 25, 31, 32, 44, 46, 48, 49, 50], "bound": [24, 25, 31, 32], "elbo": [24, 25, 31, 32, 48, 50], "non": [24, 25, 44, 49, 50, 52], "represent": [24, 25, 46], "f": [24, 25, 27, 29, 31, 32, 38, 39, 42, 46, 50, 52], "kuu": [24, 25], "v": [24, 25, 44], "q_sqrt\u1d40": [24, 25], "drawn": [24, 25, 39, 52], "coerc": [24, 25], "ed": [24, 25], "parametris": [24, 25, 26], "triangular": [24, 25], "make": [24, 25, 27, 33, 34, 42, 46, 47, 48, 51], "contribut": [24, 25, 42], "abov": [24, 25, 42, 46, 49, 52], "super": [24, 25], "_make_distribution_fn": [24, 25], "convert_to_tensor": [24, 25, 45], "add": [24, 25, 26, 27, 29, 31, 32, 41], "specif": [24, 25, 29], "per": [24, 25, 26, 31, 32, 33, 34, 49], "previous_layer_output": [24, 25], "previou": [24, 25, 26, 27], "coercibl": [24, 25], "correl": [24, 25, 45], "uncorrel": [24, 25], "document": [24, 25, 33, 34], "compositor": [25, 26], "layerwithobserv": [25, 26, 31, 32, 40], "agnost": [25, 26], "factoris": [25, 26], "famili": [25, 26], "describ": [25, 26, 27, 31, 32, 40, 42], "sdhd19": [25, 26, 42, 44], "concaten": [25, 26, 44], "observ": [25, 26, 31, 32, 39, 44, 46, 50, 52], "appropri": [25, 26], "combin": [25, 26, 31, 32, 42, 46, 47, 48, 50, 51, 53], "do": [25, 26, 27, 29, 31, 32, 44], "axi": [25, 26, 44, 46, 52], "default_float": [25, 26, 31, 32, 46, 47, 49, 52], "through": [25, 26, 33, 34, 46, 52], "latent_variable_sampl": [25, 26], "observationtyp": [25, 26, 40], "seed": [25, 26], "compos": [25, 26], "din": [25, 26], "dout": [25, 26], "indic": [25, 26, 46, 52], "oper": [25, 26, 27, 46], "_inference_posterior": [25, 26], "get": [25, 26], "final": [25, 26, 27, 44, 46, 49], "_inference_latent_samples_and_loss": [25, 26], "forward": [25, 26], "henc": [25, 26, 52], "unus": [25, 26], "_prediction_latent_sampl": [25, 26], "_local_kl": [25, 26], "trainabl": [25, 26, 28, 44, 49], "dynam": [25, 26, 28], "By": [25, 26, 47, 50], "inherit": [25, 26, 31, 32], "second": [25, 26, 29, 46, 52], "after": [25, 26, 47, 48, 49, 50, 51], "customari": [25, 26], "distinguish": [25, 26], "unlik": [25, 26], "accept": [25, 26, 31, 32, 48], "In": [25, 26, 36, 37, 42, 43, 44, 46, 47, 48, 49, 50, 52], "likelihoodlay": [25, 27, 29, 31, 32, 42, 44, 47, 49, 50, 51], "wrap": [25, 27, 29, 31, 32, 33, 34, 40], "multivariatenormaldiag": [25, 27, 29, 44, 47, 48, 49, 50, 51], "neg": [25, 27, 29, 43, 48], "predict_mean_and_var": [25, 27], "togeth": [25, 27, 29, 36, 37, 47], "likelihoodloss": [25, 27, 29, 49], "sequenti": [25, 27, 29, 31, 32], "onc": [25, 27, 29, 52], "would": [25, 27, 29, 44, 52], "twice": [25, 27, 29], "likelihoodoutput": [25, 27], "preced": [25, 27], "turn": [25, 27, 44], "well": [25, 27, 44, 46, 47, 50], "With": [25, 28], "releas": [25, 28], "our": [25, 28, 46, 48, 49, 50, 52], "workaround": [25, 28], "longer": [25, 28, 44], "need": [25, 28, 31, 32, 44, 46, 47, 48, 49, 50, 51], "prowler": [25, 28], "io": [25, 28], "189": [25, 28], "remov": [25, 28, 33, 34, 44, 47, 48, 49, 50, 51], "while": [27, 52], "f_mean": [27, 46, 47, 48, 50, 52], "f_var": [27, 46, 47, 48, 50, 52], "y_mean": [27, 44, 51], "y_var": [27, 44, 51], "encapsul": [27, 37, 44, 50], "tensormetaclass": 27, "behav": 27, "track": [28, 49, 50], "adapt": [29, 42, 48], "probabl": [29, 33, 34, 52], "explicitli": [29, 31, 32, 47, 49, 50, 51], "contrast": 29, "overal": 29, "your": 29, "y_true": 29, "f_predict": 29, "interfac": 29, "rather": [29, 52], "y_pred": 29, "_cholesky_with_jitt": 30, "jitter": [30, 46], "default_jitt": 30, "improv": 30, "stabil": 30, "compute_a_inv_b": 30, "explicit": [30, 33, 34], "invers": 30, "often": 30, "stabl": [30, 50], "posit": 30, "definit": 30, "lead": [30, 42, 46], "long": 30, "thei": [30, 44, 47, 48], "f_layer": [31, 32, 44], "target_dim": [31, 32], "default_model_class": [31, 32, 33, 34, 51], "f\u2099": [31, 32], "f\u2082": [31, 32], "f\u2081": [31, 32], "those": [31, 32, 52], "predict_f": [31, 32, 46, 47, 50, 52], "itself": [31, 32], "access": [31, 32], "as_training_model": [31, 32, 33, 34, 42, 44, 47, 48, 50, 51], "as_prediction_model": [31, 32, 44, 48, 50, 51], "docstr": [31, 32], "altern": [31, 32, 46, 51, 52], "model_class": [31, 32, 33, 34, 51], "automat": [31, 32, 46, 52], "detect": [31, 32, 35], "just": [31, 32, 33, 47], "semant": [31, 32, 42, 51], "could": [31, 32, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52], "natgradmodel": [31, 32, 33, 34, 51], "_validate_num_data": [31, 32], "option": [31, 32, 52], "valid": [31, 32, 40], "_validate_dtyp": [31, 32], "valueerror": [31, 32], "incorrect": [31, 32], "_evaluate_deep_gp": [31, 32], "_evaluate_likelihood": [31, 32], "f_output": [31, 32], "support": [31, 32, 34, 38, 42, 47, 48, 49, 50, 51], "present": [31, 32], "compil": [31, 32, 33, 34, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "handl": [31, 32, 33, 34, 44, 50], "NOT": [31, 32], "here": [31, 32, 42, 44, 51], "endpoint": [31, 32], "dummi": [31, 32, 49], "overrid": [31, 32], "xtest": [31, 32], "modul": [32, 33, 36, 47, 49, 50, 51], "relat": 33, "natgradwrapp": [33, 34], "naturalgradi": [33, 34, 51], "drop": [33, 34], "replac": [33, 34], "style": [33, 34, 48], "natgrad_lay": [33, 34, 51], "befor": [33, 34, 48], "natur": [33, 34, 44, 47, 52], "gradient": [33, 34], "one": [33, 34, 42, 44, 49, 50, 52], "natgrad": [33, 34, 51], "adam": [33, 34, 42, 44, 47, 48, 49, 50, 51], "getter": [33, 34], "setter": [33, 34], "select": [33, 34], "hack": [33, 34], "cope": [33, 34, 52], "reducelronplateau": [33, 34, 47, 48, 51], "learningrateschedul": [33, 34], "been": [33, 34, 47, 49, 50, 52], "hardcod": [33, 34], "train_step": [33, 34], "logic": [33, 34], "step": [33, 34, 51], "what": [33, 34, 50], "happen": [33, 34], "base_model": [33, 34], "futur": [33, 34, 42, 44, 52], "new": [33, 34, 38, 39, 52], "simpli": [33, 34], "runtim": 35, "verify_compat": 35, "nonetyp": [36, 37], "feature_funct": [36, 37, 46, 52], "feature_coeffici": [36, 37, 46, 52], "sum_": [36, 37, 46, 47, 52], "l": [36, 37, 44, 47, 51, 52], "lambda_i": [36, 37, 47], "phi_i": [36, 37, 47, 52], "cdot": [36, 37, 46, 47, 52], "deriv": [36, 37], "mercer": [36, 37, 46, 52], "pair": [36, 37], "eigenfunct": [36, 37, 47], "eigenvalu": [36, 37, 47], "some": [36, 37, 44, 48, 50, 51], "left": [36, 37, 44, 46], "hand": [36, 37, 46], "side": [36, 37], "unknown": [36, 37, 47], "avail": [36, 37], "close": [36, 37, 46, 52], "solin": [36, 37], "arno": [36, 37], "simo": [36, 37], "s\u00e4rkk\u00e4": [36, 37], "hilbert": [36, 37], "space": [36, 37, 38, 46, 47, 53], "borovitskii": [36, 37, 42], "viacheslav": [36, 37, 42], "mat\u00e9rn": [36, 37], "riemannian": [36, 37], "manifold": [36, 37], "advanc": [36, 37, 42], "system": [36, 37, 42, 46], "ali": [36, 37, 42], "benjamin": [36, 37, 42], "vincent": [36, 37, 42, 44], "nicola": [36, 37, 42], "durrand": [36, 37, 42], "jame": [36, 37, 42], "hensman": [36, 37, 42], "spheric": [36, 37], "harmon": [36, 37], "analyt": [36, 37, 46], "express": [36, 37, 46, 52], "infinit": [36, 37, 52], "certain": [36, 37, 46], "allow": [36, 37, 38, 47, 49], "k_diag": [36, 37], "efficient_sampl": [36, 38, 47], "infti": [37, 52], "tutori": [37, 38, 42, 49], "overview": [37, 38, 50], "_approximatekernel": 37, "x2": 37, "inner": 37, "product": 37, "__call__": 38, "importantli": [38, 47], "time": [38, 44, 46, 47, 48, 50, 52], "achiev": 38, "costli": [38, 47], "_efficient_sample_conditional_gaussian": 38, "wilson": [38, 42, 46, 52], "wbt": [38, 42, 46, 47, 52], "20": [38, 42, 44, 46, 47, 50, 52], "_efficient_sample_matheron_rul": 38, "__add__": 38, "summat": 38, "howev": [38, 46, 48, 50, 52], "rule": [38, 46], "matheron": [38, 46], "scheme": [38, 46], "draw_conditional_sampl": 39, "f_old": 39, "tild": 39, "condit": [39, 42, 44], "f_": 39, "old": 39, "joint": 39, "f_new": 39, "stack": 39, "pmatrix": [39, 46], "operatornam": 39, "2x2": 39, "block": [39, 42, 44, 50, 52], "unwrap_dist": 40, "dist": 40, "unwrap": 40, "_tensorcoerc": 40, "union": 40, "like": [40, 42, 48, 52], "__version__": 41, "research": [42, 52], "toolbox": 42, "dedic": 42, "dl13": [42, 44, 50], "hierarch": [42, 49], "extens": 42, "feed": 42, "next": [42, 45], "mathemat": [42, 47], "vdwdj": [42, 50], "marri": 42, "power": [42, 43, 46, 48, 50], "api": [42, 50], "deploi": 42, "modern": [42, 53], "wai": [42, 46], "tool": [42, 47], "basic": [42, 50, 52], "comprehens": 42, "refer": [42, 46, 52], "quick": 42, "teaser": 42, "snippet": 42, "intro": 42, "demonstr": [42, 46, 48, 52], "linspac": [42, 44, 45, 47, 48, 49, 50, 51, 52], "min": [42, 44, 47, 48, 49, 50, 51], "max": [42, 44, 47, 48, 49, 50, 51], "reshap": [42, 44, 45, 47, 48, 49, 50, 51], "kernel1": [42, 45, 50], "inducing_variable1": [42, 50], "copi": [42, 45, 50, 51, 52], "gp_layer1": [42, 50], "kernel2": [42, 45, 50], "inducing_variable2": [42, 50], "gp_layer2": [42, 44, 50], "two_layer_dgp": [42, 50], "histori": [42, 44, 47, 48, 49, 50, 51], "1e3": [42, 44, 50], "produc": 42, "shown": [42, 46], "fig": [42, 44, 45, 46, 48, 49, 50, 52], "comparison": 42, "pip": 42, "python": [42, 44, 47, 48, 49, 50, 51], "7": [42, 44, 45, 46, 48, 49, 50, 51, 52], "onward": 42, "branch": 42, "repositori": 42, "open": 42, "project": 42, "submit": 42, "pull": 42, "request": 42, "bug": 42, "report": [42, 43], "guidelin": 42, "public": [42, 50], "slack": 42, "workspac": 42, "pleas": [42, 47, 48, 49, 50, 51], "invit": 42, "link": 42, "ask": 42, "short": 42, "question": 42, "involv": 42, "discuss": 42, "andrea": 42, "damian": 42, "neil": [42, 44], "lawrenc": [42, 44], "aussian": 42, "2013": 42, "hugh": 42, "marc": 42, "estim": [42, 47], "2018": [42, 44], "ldjd20": [42, 50], "felix": 42, "leibfri": 42, "st": 42, "john": 42, "arxiv": 42, "preprint": 42, "2012": 42, "13962": 42, "rw06": [42, 50], "ce": 42, "rasmussen": 42, "cki": 42, "william": 42, "mit": 42, "press": 42, "cambridg": 42, "ma": 42, "usa": 42, "januari": 42, "2006": 42, "doubli": 42, "stochast": [42, 50, 52], "2017": 42, "import": [42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "2019": 42, "dougal": 42, "j": [42, 46], "sutherland": 42, "jeff": 42, "schneider": 42, "On": [42, 44, 46], "error": [42, 44], "ourier": 42, "thirti": 42, "uncertainti": [42, 47], "862": 42, "871": 42, "2015": 42, "mark": [42, 52], "van": 42, "der": 42, "wilk": 42, "artem": 42, "artemev": 42, "interdomain": 42, "2003": 42, "01115": 42, "alexand": 42, "terenin": 42, "peter": 42, "mostowski": 42, "xinnan": 42, "yu": 42, "ananda": 42, "theertha": 42, "suresh": 42, "krzysztof": 42, "choromanski": 42, "daniel": 42, "holtmann": 42, "rice": 42, "sanjiv": 42, "kumar": 42, "29": 42, "1975": 42, "1983": 42, "2016": 42, "gpflux": [43, 44, 45, 46, 47, 49, 51, 52, 53], "sever": [43, 46, 52], "uci": 43, "found": 43, "main": [43, 46], "py": [43, 44, 45, 47, 48, 49, 50, 51], "json": [43, 48], "script": [43, 46], "aggreg": 43, "plot": [43, 45, 46, 47, 48, 49, 50, 51, 52], "outcom": [43, 52], "dev": 43, "mse": 43, "nlpd": 43, "measur": 43, "split": 43, "90": 43, "remain": [43, 46, 52], "10": [43, 44, 45, 46, 47, 49, 50, 51, 52], "normalis": [43, 44, 48, 50], "unit": [43, 48, 49], "tabl": 43, "count": [43, 44, 49], "concret": 43, "103785": 43, "014586": 43, "526873": 43, "231547": 43, "093612": 43, "003917": 43, "388471": 43, "200387": 43, "103213": 43, "019258": 43, "624335": 43, "409077": 43, "energi": 43, "003866": 43, "001660": 43, "991852": 43, "065885": 43, "004071": 43, "001542": 43, "089672": 43, "039099": 43, "004063": 43, "001521": 43, "091651": 43, "039407": 43, "kin8mn": 43, "098581": 43, "006733": 43, "263775": 43, "019575": 43, "061714": 43, "002321": 43, "040491": 43, "026879": 43, "064156": 43, "002981": 43, "144311": 43, "045383": 43, "056407": 43, "004272": 43, "009102": 43, "045228": 43, "044380": 43, "006752": 43, "129386": 43, "078303": 43, "042464": 43, "005769": 43, "113741": 43, "040804": 43, "yacht": 43, "005899": 43, "005309": 43, "908563": 43, "095456": 43, "002389": 43, "002963": 43, "084093": 43, "071270": 43, "002420": 43, "002879": 43, "085658": 43, "069810": 43, "explor": 44, "heteroscedast": 44, "seen": [44, 52], "doesn": 44, "satisfactori": 44, "inspir": 44, "prof": 44, "talk": 44, "highli": 44, "recommend": 44, "watch": 44, "plt": [44, 45, 46, 47, 48, 49, 50, 51, 52], "tqdm": 44, "tensorflow_prob": [44, 47, 48, 49, 50, 51], "sklearn": 44, "neighbor": 44, "kerneldens": 44, "come": [44, 47], "motorcycl": 44, "accid": [44, 50], "simul": [44, 50], "interest": [44, 50, 52], "particular": [44, 52], "def": [44, 46, 48, 49, 50, 51, 52], "motorcycle_data": [44, 48, 50], "panda": [44, 48, 50], "pd": [44, 48, 50], "df": [44, 48, 50], "read_csv": [44, 48, 50], "motor": [44, 48, 50], "csv": [44, 48, 50], "index_col": [44, 48, 50], "accel": [44, 48, 50], "d_xim": 44, "x_margin": [44, 47, 48, 49], "y_margin": 44, "subplot": [44, 45, 46, 48, 49, 50, 52], "scatter": 44, "marker": 44, "color": [44, 46, 48, 49, 50, 52], "set_ylim": [44, 48, 49, 50, 52], "set_xlim": [44, 52], "svgp": [44, 50, 52], "quit": 44, "poorli": 44, "shallow": [44, 50], "now": [44, 47, 49, 50], "single_layer_dgp": [44, 50], "set_xlabel": [44, 46, 48, 52], "set_ylabel": [44, 46, 48, 52], "warn": [44, 45, 46, 47, 48, 49, 50, 51, 52], "home": [44, 45, 47, 49, 50], "anaconda3": 44, "env": 44, "gpflow2": 44, "lib": [44, 47, 48, 49, 50, 51], "python3": [44, 47, 48, 49, 50, 51], "site": [44, 47, 48, 49, 50, 51], "packag": [44, 47, 48, 49, 50, 51], "op": [44, 49], "linalg": [44, 46, 52], "linear_operator_diag": 44, "175": [44, 45, 49, 50], "linearoper": 44, "__init__": [44, 47, 48, 49, 50, 51], "linear_oper": 44, "graph_par": 44, "deprec": [44, 47, 48, 49, 50, 51], "instruct": [44, 47, 48, 49, 50, 51], "39": [44, 47, 48, 49, 50, 51], "num_data_test": 44, "200": [44, 45, 48, 51], "x_test": [44, 47, 48, 49, 50], "mu": [44, 46, 48, 50], "squeez": [44, 48, 49, 50, 51], "var": [44, 48, 49, 50], "upper": [44, 48, 49, 50], "fill_between": [44, 46, 48, 49, 50, 52], "c1": [44, 48, 49, 50], "alpha": [44, 46, 47, 48, 49, 50, 52], "kx": [44, 47, 48, 49, 50], "acc": 44, "errorbar": [44, 51], "overestim": 44, "bar": [44, 52], "right": [44, 46], "choos": [44, 46], "recognit": 44, "done": [44, 49], "w_dim": 44, "prior_mean": 44, "prior_std": 44, "lv": 44, "act": 44, "pseudo": 44, "carefulli": 44, "8": [44, 45, 46, 47, 48, 49, 50, 51, 52], "05": [44, 45, 46, 47, 48, 49, 50, 51, 52], "9": [44, 46, 47, 48, 50, 51], "assign": [44, 51], "print_summari": [44, 49], "fmt": [44, 49], "transform": [44, 49, 52], "_layer": 44, "parameterident": 44, "94": 44, "float64": [44, 47, 48, 49], "01673752e": 44, "02": 44, "parametersoftplu": 44, "float641": 44, "04166667": 44, "66191201": 44, "parameterfilltriangular": 44, "48779388": 44, "00": 44, "varianceparametersoftplu": 44, "float640": [44, 49], "009999999999999998": 44, "directlyparameterizedencod": 44, "off": 44, "shuffl": 44, "17": 44, "005": 44, "20e3": 44, "batch_siz": [44, 47, 48, 51], "18": [44, 50], "_metric": [44, 49], "_non_trainable_weight": [44, 49], "resourcevari": [44, 49], "0780249257681602": 44, "03641934": 44, "softplu": [44, 49], "8204074": 44, "4804222860958632": 44, "8957803239319818": 44, "13181667": 44, "24491404": 44, "10892382": 44, "15883231": 44, "44379760e": 44, "filltriangular": [44, 49], "69748551e": 44, "00000000e": 44, "14355680909786334": 44, "10763915659754926": 44, "7436233151733747": 44, "28383233e": 44, "25372763": 44, "55995241e": 44, "varianceparamet": 44, "19": 44, "predict_y_sampl": 44, "prediction_model": [44, 48], "25": [44, 46, 48], "append": [44, 45, 46, 52], "concat": 44, "plot_sampl": 44, "n_sampl": 44, "xs_tile": 44, "tile": 44, "flatten": 44, "c0": [44, 47], "plot_latent_vari": 44, "isinst": 44, "yerr": 44, "o": [44, 46, 52], "ax1": [44, 48], "ax2": [44, 48], "figsiz": [44, 45, 46, 48, 52], "100": [44, 46, 47, 48, 49, 50, 51], "lt": [44, 48, 49, 50], "24": 44, "88it": 44, "23": 44, "plot_mean_and_var": 44, "5_000": 44, "acceler": [44, 48, 50], "5000": 44, "03": 44, "44it": 44, "sharp": 44, "ish": 44, "transit": 44, "silverman": [44, 50], "1985": [44, 50], "aspect": [44, 50, 52], "spline": [44, 50], "smooth": [44, 50, 52], "curv": [44, 46, 50], "journal": [44, 50], "royal": [44, 50], "societi": [44, 50], "seri": [44, 50], "47": [44, 50], "52": [44, 50], "develop": 45, "intuit": 45, "set_se": 45, "42": 45, "2023": [45, 46, 47, 48, 49, 50, 51, 52], "31": [45, 46, 47, 48, 49, 50, 51, 52], "07": [45, 46, 47, 48, 49, 50, 51, 52], "08": [45, 46], "40": 45, "893706": 45, "tf2tensorrt": [45, 46, 47, 48, 49, 50, 51, 52], "py_util": [45, 46, 47, 48, 49, 50, 51, 52], "cc": [45, 46, 47, 48, 49, 50, 51, 52], "38": [45, 46, 47, 48, 49, 50, 51, 52], "trt": [45, 46, 47, 48, 49, 50, 51, 52], "find": [45, 46, 47, 48, 49, 50, 51, 52], "tensorrt": [45, 46, 47, 48, 49, 50, 51, 52], "give": 45, "inducing_var1": 45, "15": [45, 46], "layer1": [45, 51], "inducing_var2": 45, "layer2": [45, 51], "inducing_var3": 45, "kernel3": 45, "layer3": 45, "runner": [45, 47, 49, 50], "userwarn": [45, 47, 49, 50], "bewar": [45, 49, 50], "wa": [45, 47, 49, 50, 51], "layer_output": 45, "transpos": [45, 46], "go": [45, 46, 48, 49, 50], "bottom": 45, "33": 45, "aim": [46, 52], "figur": [46, 51, 52], "problem": [46, 52], "naiv": 46, "star": [46, 52], "formal": 46, "textbf": [46, 52], "accomplish": 46, "via": [46, 52], "chol": 46, "assumpt": [46, 47, 52], "real": 46, "x_n": [46, 52], "y_n": [46, 52], "univari": [46, 52], "sigma_": [46, 52], "star_": 46, "notat": [46, 52], "conveni": 46, "cross": 46, "matric": 46, "prime": [46, 47, 52], "denot": 46, "vectoris": 46, "jointli": 46, "allevi": [46, 52], "phi_d": 46, "approx": [46, 52], "view": [46, 47, 48, 52], "interc": [46, 52], "quantiti": 46, "exact": [46, 52], "linearli": 46, "decompos": 46, "mani": [46, 50, 52], "order": 46, "area": [46, 52], "relev": [46, 52], "extrapol": [46, 52], "reproduc": 46, "anoth": 46, "remedi": 46, "propos": [46, 47], "hybrid": [46, 53], "fashion": 46, "better": [46, 50], "accuraci": 46, "compar": [46, 49, 52], "formula": 46, "subsequ": [46, 47], "qualit": 46, "wasserstein": 46, "distanc": [46, 52], "conduct": 46, "accord": [46, 52], "neurip": [46, 52], "rcparam": [46, 52], "rc": [46, 52], "font": [46, 52], "rbf": [46, 52], "matern52": [46, 47, 52], "gpr": [46, 52], "49": [46, 51], "901494": 46, "individu": 46, "eventu": 46, "domain": [46, 52], "increas": [46, 52], "log_": 46, "orang": [46, 52], "blue": 46, "fix": [46, 52], "noise_vari": [46, 52], "num_test_sampl": 46, "64": 46, "1024": [46, 52], "paper": 46, "num_experiment_run": 46, "repetit": 46, "vari": 46, "num_input_dimens": 46, "train_sample_expon": 46, "num_train_sampl": 46, "num_featur": 46, "4096": 46, "16384": 46, "actual": [46, 52], "below": [46, 52], "compute_analytic_gp_predict": 46, "x_star": [46, 52], "identifi": [46, 52], "param": 46, "free": 46, "gpr_model": [46, 52], "assert": 46, "explain": [46, 52], "compute_hybrid_rule_predict": 46, "exact_kernel": 46, "approximate_kernel": 46, "phi_star": 46, "_feature_funct": 46, "kxstarx": 46, "kxx": [46, 52], "kxx_plus_noise_var": [46, 52], "set_diag": 46, "diag_part": 46, "kxx_inv_mul_phi": 46, "solv": 46, "kxx_inv_mul_i": 46, "f_var_sqrt": 46, "decad": 46, "logarithm": 46, "_2": 46, "d_": 46, "trace": 46, "l_2": 46, "norm": 46, "log10_wasserstein_dist": 46, "approximate_mean": 46, "approximate_covari": 46, "12": [46, 48, 50, 51], "robust": [46, 47], "squared_mean_dist": 46, "square_root_covari": 46, "sqrtm": 46, "ey": [46, 52], "matrix_product": 46, "square_root_matrix_product": 46, "ws_distanc": 46, "log10_ws_dist": 46, "conduct_experi": 46, "log10": 46, "wassertein": 46, "adjust": 46, "dim": 46, "random_sampl": 46, "uniform": [46, 52], "low": [46, 47], "85": 46, "lxx": [46, 52], "matmul": [46, 52], "lie": 46, "interv": [46, 47, 52], "partial": 46, "overlap": 46, "f_mean_exact": 46, "f_var_exact": 46, "f_mean_weight": 46, "f_var_weight": 46, "f_mean_hybrid": 46, "f_var_hybrid": 46, "solut": 46, "log10_ws_dist_weight": 46, "log10_ws_dist_hybrid": 46, "repeat": [46, 50], "quartil": 46, "conduct_experiment_for_multiple_run": 46, "list_of_log10_ws_dist_weight": 46, "list_of_log10_ws_dist_hybrid": 46, "log10_ws_dist_weight_quart": 46, "quantil": 46, "75": 46, "log10_ws_dist_hybrid_quart": 46, "sinc": 46, "conduct_experiment_for_different_train_data_s": 46, "list_log10_ws_dist_weight_quart": 46, "list_log10_ws_dist_hybrid_quart": 46, "nt": 46, "print": 46, "num": [46, 52], "conduct_experiment_for_different_num_featur": 46, "list_of_weight_result": 46, "list_of_hybrid_result": 46, "nf": 46, "weight_result": 46, "hybrid_result": 46, "arriv": 46, "loop": [46, 52], "set_titl": [46, 52], "set_xscal": 46, "bisqu": 46, "peru": 46, "linewidth": [46, 52], "lightblu": 46, "darkblu": 46, "256": 46, "09": [46, 48], "14": [46, 52], "328008": 46, "tsl": 46, "cpu_allocator_impl": 46, "83": 46, "alloc": 46, "142606336": 46, "exce": 46, "memori": 46, "363909": 46, "400308": 46, "626211": 46, "659091": 46, "There": [46, 52], "exeri": 46, "dark": 46, "colour": [46, 52], "fewer": [46, 52], "lighter": 46, "decreas": [46, 52], "qualiti": [46, 52], "effect": [46, 52], "higher": 46, "maintain": 46, "eleg": 47, "overfit": 47, "incorpor": 47, "calibr": 47, "candid": 47, "scarc": 47, "noisi": 47, "applic": 47, "optimis": [47, 48, 52], "bo": 47, "despit": 47, "favor": 47, "still": 47, "practic": 47, "limit": [47, 52], "One": 47, "quickli": 47, "prohibit": 47, "grow": [47, 52], "known": [47, 48, 52], "bottleneck": 47, "thompson": 47, "recent": 47, "encourag": 47, "regim": 47, "unlock": 47, "group": 47, "sample_dgp": 47, "55": [47, 49], "321059": 47, "snelson1d": [47, 49, 51], "npz": [47, 49, 51], "cutoff": 47, "astyp": 47, "num_rff": 47, "1000": [47, 51, 52], "kernel_with_featur": 47, "noqa": 47, "e231": 47, "198": [47, 49, 50], "verifi": [47, 49, 50], "advis": [47, 49, 50], "construct_": [47, 49, 50], "tmp": [47, 49, 50, 51], "ipykernel_3380": 47, "1062847873": 47, "deprecationwarn": [47, 49, 50, 51], "tf2": [47, 49, 50, 51], "collect": [47, 49, 50, 51], "nativ": [47, 49, 50, 51], "anymor": [47, 49, 50, 51], "opt": [47, 48, 49, 50, 51], "hostedtoolcach": [47, 48, 49, 50, 51], "x64": [47, 48, 49, 50, 51], "342": [47, 48, 49, 50, 51], "mvn_diag": [47, 48, 49, 50, 51], "scale_identity_multipli": [47, 48, 49, 50, 51], "scale_diag": [47, 48, 49, 50, 51], "learning_r": [47, 48, 51], "patienc": [47, 48, 51], "95": [47, 48, 51], "min_lr": [47, 48, 51], "n_x": 47, "f_scale": 47, "n_sim": 47, "f_sampl": [47, 52], "xlim": 47, "ylim": 47, "box": 48, "cours": 48, "get_logg": [48, 50], "setlevel": [48, 50], "info": [48, 50], "11": [48, 49, 50, 51], "550188": 48, "xlabel": [48, 50], "ylabel": [48, 50], "focuss": 48, "predefin": [48, 52], "care": 48, "minibatch": [48, 50], "modifi": 48, "instanti": 48, "training_model": 48, "procedur": 48, "plateau": 48, "modelcheckpoint": 48, "filepath": 48, "ckpt": 48, "save_weights_onli": 48, "fail": 48, "serial": 48, "ignor": 48, "cannot": [48, 52], "pickl": 48, "34": 48, "gp_0": 48, "lr": [48, 51], "insight": 48, "handi": 48, "thing": 48, "don": 48, "command": 48, "line": [48, 49, 50, 52], "logdir": 48, "n_test": [48, 49, 50], "reload": 48, "afterward": 48, "save_weight": 48, "prediction_model_new": 48, "load_weight": 48, "checkpointloadstatu": 48, "0x7fe3a4068a00": 48, "gt": [48, 49, 50], "inde": 48, "plain": 49, "46": 49, "562189": 49, "easi": [49, 50, 51], "usual": 49, "relu": 49, "utilis": 49, "interpret": [49, 52], "warp": 49, "likelihood_contain": 49, "discov": 49, "ipykernel_3602": 49, "712807007": 49, "trajectori": 49, "hist": 49, "500": 49, "line2d": [49, 50], "0x7f6348750a60": 49, "inspect": [49, 50], "f_distribut": 49, "_self_tracked_track": 49, "_trainable_weight": 49, "unliftedinitializervari": 49, "float32": 49, "25479": 49, "08571": 49, "17678": 49, "04149": 49, "07264": 49, "03576": 49, "03372": 49, "12241": 49, "12336": 49, "05581": 49, "09127": 49, "01051": 49, "29923": 49, "12196": 49, "69681": 49, "92555": 49, "22297": 49, "22533": 49, "26543": 49, "float648": 49, "81698": 49, "93931": 49, "53786": 49, "34784": 49, "_output_lay": 49, "_output_coordin": 49, "09361": 49, "cover": 50, "reader": 50, "familiar": 50, "concept": 50, "727377": 50, "crash": 50, "helmet": 50, "showcas": 50, "oppos": 50, "ll": 50, "notic": 50, "reli": 50, "lot": [50, 52], "consciou": 50, "decis": 50, "lean": 50, "focus": 50, "respons": 50, "deal": 50, "softmax": 50, "robustmax": 50, "bernoulli": 50, "ipykernel_3703": 50, "153007595": 50, "specialis": 50, "ve": 50, "few": [50, 52], "predict_i": 50, "hope": 50, "familiaris": 50, "themselv": 50, "0x7fb9e0c28310": 50, "visualis": [50, 52], "clearli": 50, "troubl": 50, "exercis": 50, "setup": 50, "similar": 50, "apart": 50, "fact": 50, "4199927947": 50, "0x7fb9d2ed35e0": 50, "visual": 50, "immedi": 50, "much": 50, "todo": 51, "reduce_in_test": 51, "534783": 51, "inlin": 51, "load": 51, "create_lay": 51, "13": [51, 52], "hidden_dim": 51, "layer_typ": 51, "create_model": 51, "constructor": 51, "num_epoch": 51, "dgp_train": 51, "ipykernel_3860": 51, "2200924875": 51, "6871": 51, "gp_layer_prior_kl": 51, "0528": 51, "gp_layer_1_prior_kl": 51, "0915": 51, "1654": 51, "0309": 51, "0929": 51, "dgp_natgrad": 51, "dgp_natgrad_train": 51, "insid": [51, 52], "history_natgrad": 51, "execut": [51, 52], "backward": 51, "9568": 51, "gp_layer_2_prior_kl": 51, "2665": 51, "gp_layer_3_prior_kl": 51, "0320": 51, "1725": 51, "2657": 51, "0461": 51, "dgp_test": 51, "re": 51, "increasingli": 52, "difficult": 52, "far": 52, "awai": 52, "outsid": 52, "less": 52, "reliabl": 52, "exactli": 52, "scope": 52, "emphasi": 52, "idea": 52, "theta_i": 52, "tau_i": 52, "randomli": 52, "unnormalis": 52, "drew": 52, "rightarrow": 52, "recov": 52, "perfectli": 52, "supervis": 52, "prod_": 52, "boldfac": 52, "up": 52, "enjoi": 52, "readili": 52, "x_": 52, "advantag": 52, "priori": 52, "know": 52, "latter": 52, "therefor": 52, "potenti": 52, "reinforc": 52, "wsa": 52, "proper": 52, "ingredi": 52, "gpf": 52, "053214": 52, "six": 52, "experiment": 52, "x_interv": 52, "live": 52, "number_of_featur": 52, "2000": 52, "number_of_test_sampl": 52, "number_of_function_sampl": 52, "number_of_train_sampl": 52, "number_of_inducing_point": 52, "x_lim": 52, "y_lim": 52, "proce": 52, "ground": 52, "truth": 52, "1st": 52, "2nd": 52, "stop": 52, "corrupt": 52, "frame": 52, "col": 52, "3rd": 52, "titl": 52, "vertic": 52, "vline": 52, "ymin": 52, "ymax": 52, "lightgrei": 52, "fill": 52, "grai": 52, "predict_f_sampl": 52, "f_mean_plus_2std": 52, "f_mean_minus_2std": 52, "linestyl": 52, "black": 52, "column": 52, "green": 52, "svgp_model": 52, "optimize_model_with_scipi": 52, "scipi": 52, "training_loss_closur": 52, "trainable_vari": 52, "bfg": 52, "disp": 52, "maxit": 52, "10000": 52, "purpl": 52, "mfc": 52, "markeredgewidth": 52, "third": 52, "tight_layout": 52, "depict": 52, "grei": 52, "dash": 52, "solid": 52, "thick": 52, "circl": 52, "drastic": 52, "matern": 52, "smoother": 52, "promin": 52, "clear": 52, "introduct": 53, "why": 53}, "objects": {"": [[13, 0, 0, "-", "gpflux"]], "gpflux": [[3, 0, 0, "-", "architectures"], [4, 0, 0, "-", "callbacks"], [6, 0, 0, "-", "encoders"], [7, 0, 0, "-", "exceptions"], [9, 0, 0, "-", "experiment_support"], [12, 0, 0, "-", "helpers"], [25, 0, 0, "-", "layers"], [29, 0, 0, "-", "losses"], [30, 0, 0, "-", "math"], [32, 0, 0, "-", "models"], [33, 0, 0, "-", "optimization"], [35, 0, 0, "-", "runtime_checks"], [36, 0, 0, "-", "sampling"], [40, 0, 0, "-", "types"], [41, 0, 0, "-", "version"]], "gpflux.architectures": [[3, 1, 1, "", "Config"], [3, 3, 1, "", "build_constant_input_dim_deep_gp"], [2, 0, 0, "-", "constant_input_dim_deep_gp"]], "gpflux.architectures.Config": [[3, 2, 1, "", "inner_layer_qsqrt_factor"], [3, 2, 1, "", "likelihood_noise_variance"], [3, 2, 1, "", "num_inducing"], [3, 2, 1, "", "whiten"]], "gpflux.architectures.constant_input_dim_deep_gp": [[2, 1, 1, "", "Config"], [2, 3, 1, "", "_construct_kernel"], [2, 3, 1, "", "build_constant_input_dim_deep_gp"]], "gpflux.architectures.constant_input_dim_deep_gp.Config": [[2, 2, 1, "", "inner_layer_qsqrt_factor"], [2, 2, 1, "", "likelihood_noise_variance"], [2, 2, 1, "", "num_inducing"], [2, 2, 1, "", "whiten"]], "gpflux.callbacks": [[4, 1, 1, "", "TensorBoard"]], "gpflux.callbacks.TensorBoard": [[4, 2, 1, "", "keywords_to_monitor"], [4, 2, 1, "", "log_dir"], [4, 4, 1, "", "on_epoch_end"], [4, 4, 1, "", "on_train_batch_end"], [4, 4, 1, "", "set_model"], [4, 2, 1, "", "update_freq"]], "gpflux.encoders": [[6, 1, 1, "", "DirectlyParameterizedNormalDiag"], [5, 0, 0, "-", "directly_parameterized_encoder"]], "gpflux.encoders.DirectlyParameterizedNormalDiag": [[6, 4, 1, "", "call"], [6, 2, 1, "", "means"], [6, 2, 1, "", "stds"]], "gpflux.encoders.directly_parameterized_encoder": [[5, 1, 1, "", "DirectlyParameterizedNormalDiag"]], "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag": [[5, 4, 1, "", "call"], [5, 2, 1, "", "means"], [5, 2, 1, "", "stds"]], "gpflux.exceptions": [[7, 5, 1, "", "EncoderInitializationError"], [7, 5, 1, "", "GPLayerIncompatibilityException"]], "gpflux.experiment_support": [[8, 0, 0, "-", "ci_utils"], [10, 0, 0, "-", "plotting"], [11, 0, 0, "-", "tensorboard"]], "gpflux.experiment_support.ci_utils": [[8, 3, 1, "", "is_continuous_integration"], [8, 3, 1, "", "notebook_list"], [8, 3, 1, "", "notebook_niter"], [8, 3, 1, "", "notebook_range"]], "gpflux.experiment_support.plotting": [[10, 3, 1, "", "plot_layer"]], "gpflux.experiment_support.tensorboard": [[11, 1, 1, "", "Event"], [11, 3, 1, "", "tensorboard_event_iterator"]], "gpflux.helpers": [[12, 3, 1, "", "construct_basic_inducing_variables"], [12, 3, 1, "", "construct_basic_kernel"], [12, 3, 1, "", "construct_gp_layer"], [12, 3, 1, "", "construct_mean_function"], [12, 3, 1, "", "make_dataclass_from_class"], [12, 3, 1, "", "xavier_initialization_numpy"]], "gpflux.layers": [[25, 1, 1, "", "BayesianDenseLayer"], [25, 1, 1, "", "GPLayer"], [25, 1, 1, "", "LatentVariableLayer"], [25, 1, 1, "", "LayerWithObservations"], [25, 1, 1, "", "LikelihoodLayer"], [25, 1, 1, "", "TrackableLayer"], [22, 0, 0, "-", "basis_functions"], [23, 0, 0, "-", "bayesian_dense_layer"], [24, 0, 0, "-", "gp_layer"], [26, 0, 0, "-", "latent_variable_layer"], [27, 0, 0, "-", "likelihood_layer"], [28, 0, 0, "-", "trackable_layer"]], "gpflux.layers.BayesianDenseLayer": [[25, 4, 1, "", "build"], [25, 4, 1, "", "call"], [25, 4, 1, "", "predict_samples"], [25, 4, 1, "", "prior_kl"]], "gpflux.layers.GPLayer": [[25, 4, 1, "", "_convert_to_tensor_fn"], [25, 4, 1, "", "_make_distribution_fn"], [25, 4, 1, "", "call"], [25, 2, 1, "", "full_cov"], [25, 2, 1, "", "full_output_cov"], [25, 2, 1, "", "num_data"], [25, 2, 1, "", "num_samples"], [25, 4, 1, "", "predict"], [25, 4, 1, "", "prior_kl"], [25, 2, 1, "", "q_mu"], [25, 2, 1, "", "q_sqrt"], [25, 4, 1, "", "sample"], [25, 2, 1, "", "whiten"]], "gpflux.layers.LatentVariableLayer": [[25, 4, 1, "", "_inference_latent_samples_and_loss"], [25, 4, 1, "", "_inference_posteriors"], [25, 4, 1, "", "_local_kls"], [25, 4, 1, "", "_prediction_latent_samples"], [25, 4, 1, "", "call"], [25, 2, 1, "", "compositor"], [25, 2, 1, "", "encoder"], [25, 2, 1, "", "prior"]], "gpflux.layers.LayerWithObservations": [[25, 4, 1, "", "call"]], "gpflux.layers.LikelihoodLayer": [[25, 4, 1, "", "call"]], "gpflux.layers.basis_functions": [[15, 0, 0, "-", "fourier_features"]], "gpflux.layers.basis_functions.fourier_features": [[15, 1, 1, "", "OrthogonalRandomFeatures"], [15, 1, 1, "", "QuadratureFourierFeatures"], [15, 1, 1, "", "RandomFourierFeatures"], [15, 1, 1, "", "RandomFourierFeaturesCosine"], [14, 0, 0, "-", "base"], [17, 0, 0, "-", "quadrature"], [19, 0, 0, "-", "random"], [21, 0, 0, "-", "utils"]], "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures": [[15, 4, 1, "", "_compute_bases"], [15, 4, 1, "", "_compute_constant"], [15, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures": [[15, 4, 1, "", "_compute_bases"], [15, 4, 1, "", "_compute_constant"]], "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine": [[15, 4, 1, "", "_compute_bases"], [15, 4, 1, "", "_compute_constant"], [15, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.base": [[14, 1, 1, "", "FourierFeaturesBase"]], "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase": [[14, 4, 1, "", "_compute_bases"], [14, 4, 1, "", "_compute_constant"], [14, 4, 1, "", "call"], [14, 4, 1, "", "compute_output_shape"], [14, 4, 1, "", "get_config"]], "gpflux.layers.basis_functions.fourier_features.quadrature": [[17, 1, 1, "", "QuadratureFourierFeatures"], [16, 0, 0, "-", "gaussian"]], "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures": [[17, 4, 1, "", "_compute_bases"], [17, 4, 1, "", "_compute_constant"], [17, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian": [[16, 1, 1, "", "QuadratureFourierFeatures"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures": [[16, 4, 1, "", "_compute_bases"], [16, 4, 1, "", "_compute_constant"], [16, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.random": [[19, 1, 1, "", "OrthogonalRandomFeatures"], [19, 1, 1, "", "RandomFourierFeatures"], [19, 1, 1, "", "RandomFourierFeaturesCosine"], [18, 0, 0, "-", "base"], [20, 0, 0, "-", "orthogonal"]], "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures": [[19, 4, 1, "", "_compute_bases"], [19, 4, 1, "", "_compute_constant"]], "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine": [[19, 4, 1, "", "_compute_bases"], [19, 4, 1, "", "_compute_constant"], [19, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.random.base": [[18, 1, 1, "", "RandomFourierFeatures"], [18, 1, 1, "", "RandomFourierFeaturesBase"], [18, 1, 1, "", "RandomFourierFeaturesCosine"], [18, 3, 1, "", "_sample_students_t"]], "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeatures": [[18, 4, 1, "", "_compute_bases"], [18, 4, 1, "", "_compute_constant"]], "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesBase": [[18, 4, 1, "", "build"], [18, 4, 1, "", "rff_constant"]], "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesCosine": [[18, 4, 1, "", "_compute_bases"], [18, 4, 1, "", "_compute_constant"], [18, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.random.orthogonal": [[20, 1, 1, "", "OrthogonalRandomFeatures"], [20, 3, 1, "", "_ceil_divide"], [20, 3, 1, "", "_sample_chi"], [20, 3, 1, "", "_sample_chi_squared"]], "gpflux.layers.basis_functions.fourier_features.utils": [[21, 3, 1, "", "_bases_concat"], [21, 3, 1, "", "_bases_cosine"]], "gpflux.layers.bayesian_dense_layer": [[23, 1, 1, "", "BayesianDenseLayer"]], "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer": [[23, 4, 1, "", "build"], [23, 4, 1, "", "call"], [23, 4, 1, "", "predict_samples"], [23, 4, 1, "", "prior_kl"]], "gpflux.layers.gp_layer": [[24, 1, 1, "", "GPLayer"]], "gpflux.layers.gp_layer.GPLayer": [[24, 4, 1, "", "_convert_to_tensor_fn"], [24, 4, 1, "", "_make_distribution_fn"], [24, 4, 1, "", "call"], [24, 2, 1, "", "full_cov"], [24, 2, 1, "", "full_output_cov"], [24, 2, 1, "", "num_data"], [24, 2, 1, "", "num_samples"], [24, 4, 1, "", "predict"], [24, 4, 1, "", "prior_kl"], [24, 2, 1, "", "q_mu"], [24, 2, 1, "", "q_sqrt"], [24, 4, 1, "", "sample"], [24, 2, 1, "", "whiten"]], "gpflux.layers.latent_variable_layer": [[26, 1, 1, "", "LatentVariableLayer"], [26, 1, 1, "", "LayerWithObservations"]], "gpflux.layers.latent_variable_layer.LatentVariableLayer": [[26, 4, 1, "", "_inference_latent_samples_and_loss"], [26, 4, 1, "", "_inference_posteriors"], [26, 4, 1, "", "_local_kls"], [26, 4, 1, "", "_prediction_latent_samples"], [26, 4, 1, "", "call"], [26, 2, 1, "", "compositor"], [26, 2, 1, "", "encoder"], [26, 2, 1, "", "prior"]], "gpflux.layers.latent_variable_layer.LayerWithObservations": [[26, 4, 1, "", "call"]], "gpflux.layers.likelihood_layer": [[27, 1, 1, "", "LikelihoodLayer"], [27, 1, 1, "", "LikelihoodOutputs"]], "gpflux.layers.likelihood_layer.LikelihoodLayer": [[27, 4, 1, "", "call"]], "gpflux.layers.trackable_layer": [[28, 1, 1, "", "TrackableLayer"]], "gpflux.losses": [[29, 1, 1, "", "LikelihoodLoss"]], "gpflux.losses.LikelihoodLoss": [[29, 4, 1, "", "call"]], "gpflux.math": [[30, 3, 1, "", "_cholesky_with_jitter"], [30, 3, 1, "", "compute_A_inv_b"]], "gpflux.models": [[32, 1, 1, "", "DeepGP"], [31, 0, 0, "-", "deep_gp"]], "gpflux.models.DeepGP": [[32, 4, 1, "", "_evaluate_deep_gp"], [32, 4, 1, "", "_evaluate_likelihood"], [32, 4, 1, "", "_validate_dtype"], [32, 4, 1, "", "_validate_num_data"], [32, 4, 1, "", "as_prediction_model"], [32, 4, 1, "", "as_training_model"], [32, 2, 1, "", "default_model_class"], [32, 4, 1, "", "elbo"], [32, 2, 1, "", "f_layers"], [32, 2, 1, "", "likelihood_layer"], [32, 2, 1, "", "num_data"], [32, 4, 1, "", "predict_f"]], "gpflux.models.deep_gp": [[31, 1, 1, "", "DeepGP"]], "gpflux.models.deep_gp.DeepGP": [[31, 4, 1, "", "_evaluate_deep_gp"], [31, 4, 1, "", "_evaluate_likelihood"], [31, 4, 1, "", "_validate_dtype"], [31, 4, 1, "", "_validate_num_data"], [31, 4, 1, "", "as_prediction_model"], [31, 4, 1, "", "as_training_model"], [31, 2, 1, "", "default_model_class"], [31, 4, 1, "", "elbo"], [31, 2, 1, "", "f_layers"], [31, 2, 1, "", "likelihood_layer"], [31, 2, 1, "", "num_data"], [31, 4, 1, "", "predict_f"]], "gpflux.optimization": [[33, 1, 1, "", "NatGradModel"], [33, 1, 1, "", "NatGradWrapper"], [34, 0, 0, "-", "keras_natgrad"]], "gpflux.optimization.NatGradModel": [[33, 6, 1, "", "natgrad_layers"], [33, 6, 1, "", "optimizer"], [33, 4, 1, "", "train_step"]], "gpflux.optimization.NatGradWrapper": [[33, 4, 1, "", "call"]], "gpflux.optimization.keras_natgrad": [[34, 1, 1, "", "NatGradModel"], [34, 1, 1, "", "NatGradWrapper"]], "gpflux.optimization.keras_natgrad.NatGradModel": [[34, 6, 1, "", "natgrad_layers"], [34, 6, 1, "", "optimizer"], [34, 4, 1, "", "train_step"]], "gpflux.optimization.keras_natgrad.NatGradWrapper": [[34, 4, 1, "", "call"]], "gpflux.runtime_checks": [[35, 3, 1, "", "verify_compatibility"]], "gpflux.sampling": [[36, 1, 1, "", "KernelWithFeatureDecomposition"], [36, 7, 1, "", "efficient_sample"], [37, 0, 0, "-", "kernel_with_feature_decomposition"], [38, 0, 0, "-", "sample"], [39, 0, 0, "-", "utils"]], "gpflux.sampling.KernelWithFeatureDecomposition": [[36, 6, 1, "", "feature_coefficients"], [36, 6, 1, "", "feature_functions"]], "gpflux.sampling.kernel_with_feature_decomposition": [[37, 1, 1, "", "KernelWithFeatureDecomposition"], [37, 1, 1, "", "_ApproximateKernel"]], "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition": [[37, 6, 1, "", "feature_coefficients"], [37, 6, 1, "", "feature_functions"]], "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel": [[37, 4, 1, "", "K"], [37, 4, 1, "", "K_diag"]], "gpflux.sampling.sample": [[38, 1, 1, "", "Sample"], [38, 3, 1, "", "_efficient_sample_conditional_gaussian"], [38, 3, 1, "", "_efficient_sample_matheron_rule"], [38, 7, 1, "", "efficient_sample"]], "gpflux.sampling.sample.Sample": [[38, 4, 1, "", "__add__"], [38, 4, 1, "", "__call__"]], "gpflux.sampling.utils": [[39, 3, 1, "", "draw_conditional_sample"]], "gpflux.types": [[40, 7, 1, "", "ObservationType"], [40, 7, 1, "", "ShapeType"], [40, 3, 1, "", "unwrap_dist"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:exception", "6": "py:property", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"], "7": ["py", "data", "Python data"]}, "titleterms": {"gpflux": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 50], "api": 1, "refer": [1, 50], "architectur": [2, 3], "constant_input_dim_deep_gp": 2, "modul": [2, 4, 5, 7, 8, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40], "content": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "submodul": [3, 6, 9, 13, 15, 17, 25, 32, 33, 36], "packag": [3, 6, 15, 17, 19, 25, 32, 33, 36], "callback": [4, 48], "encod": [5, 6], "directly_parameterized_encod": 5, "except": 7, "experiment_support": [8, 9, 10, 11], "ci_util": 8, "plot": [10, 44], "tensorboard": 11, "helper": 12, "subpackag": [13, 15, 22, 25], "layer": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 47, 48, 49, 50], "basis_funct": [14, 15, 16, 17, 18, 19, 20, 21, 22], "fourier_featur": [14, 15, 16, 17, 18, 19, 20, 21], "base": [14, 18], "quadratur": [16, 17], "gaussian": [16, 44, 46, 47, 50], "random": [18, 19, 20, 47, 52], "orthogon": 20, "util": [21, 39], "bayesian_dense_lay": 23, "gp_layer": 24, "todo": [24, 25, 26, 27, 33, 34], "latent_variable_lay": 26, "likelihood_lay": 27, "trackable_lay": 28, "loss": 29, "math": 30, "model": [31, 32, 47, 48, 49], "deep_gp": 31, "optim": [33, 34], "keras_natgrad": 34, "runtime_check": 35, "sampl": [36, 37, 38, 39, 45, 46, 47, 53], "kernel_with_feature_decomposit": 37, "type": 40, "version": 41, "welcom": 42, "get": 42, "start": 42, "instal": 42, "latest": 42, "releas": 42, "from": 42, "pypi": 42, "develop": 42, "github": 42, "join": 42, "commun": 42, "bibliographi": 42, "benchmark": 43, "deep": [44, 45, 48, 49, 50], "process": [44, 46, 47, 50], "latent": 44, "variabl": 44, "load": [44, 47, 48, 49], "data": [44, 47], "standard": 44, "singl": [44, 47, 50], "spars": 44, "variat": 44, "gp": [44, 45, 47, 48, 49, 50], "first": 44, "second": 44, "fit": [44, 47], "predict": 44, "code": 44, "conclus": 44, "construct": 45, "propag": 45, "through": 45, "visualis": 45, "effici": [46, 47], "posterior": 46, "fourier": [47, 52], "featur": [47, 52], "snelson": [47, 49], "dataset": [47, 48, 49, 50], "set": [47, 48], "up": [47, 48], "kernel": 47, "its": 47, "decomposit": 47, "build": 47, "train": [47, 48], "initialis": 47, "draw": 47, "why": 48, "i": 48, "modern": 48, "librari": 48, "motorcycl": [48, 50], "toi": 48, "one": 48, "dimension": 48, "two": [48, 50], "mini": 48, "batch": 48, "checkpoint": 48, "monitor": 48, "post": 48, "save": 48, "serv": 48, "hybrid": 49, "combin": 49, "neural": 49, "network": 49, "initi": 49, "sequenti": 49, "kera": [49, 51], "net": 49, "introduct": 50, "The": 50, "integr": 51, "weight": 52, "space": 52, "approxim": 52, "tutori": 53, "introductori": 53, "advanc": 53}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"gpflux": [[0, "module-gpflux"], [13, "module-gpflux"]], "API reference": [[1, "api-reference"]], "gpflux.architectures.constant_input_dim_deep_gp": [[2, "module-gpflux.architectures.constant_input_dim_deep_gp"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"]], "gpflux.architectures": [[3, "module-gpflux.architectures"]], "Submodules": [[3, "submodules"], [6, "submodules"], [9, "submodules"], [13, "submodules"], [15, "submodules"], [17, "submodules"], [25, "submodules"], [32, "submodules"], [33, "submodules"], [36, "submodules"]], "Package Contents": [[3, "package-contents"], [6, "package-contents"], [15, "package-contents"], [17, "package-contents"], [19, "package-contents"], [25, "package-contents"], [32, "package-contents"], [33, "package-contents"], [36, "package-contents"]], "gpflux.callbacks": [[4, "module-gpflux.callbacks"]], "gpflux.encoders.directly_parameterized_encoder": [[5, "module-gpflux.encoders.directly_parameterized_encoder"]], "gpflux.encoders": [[6, "module-gpflux.encoders"]], "gpflux.exceptions": [[7, "module-gpflux.exceptions"]], "gpflux.experiment_support.ci_utils": [[8, "module-gpflux.experiment_support.ci_utils"]], "gpflux.experiment_support": [[9, "module-gpflux.experiment_support"]], "gpflux.experiment_support.plotting": [[10, "module-gpflux.experiment_support.plotting"]], "gpflux.experiment_support.tensorboard": [[11, "module-gpflux.experiment_support.tensorboard"]], "gpflux.helpers": [[12, "module-gpflux.helpers"]], "Subpackages": [[13, "subpackages"], [15, "subpackages"], [22, "subpackages"], [25, "subpackages"]], "gpflux.layers.basis_functions.fourier_features.base": [[14, "module-gpflux.layers.basis_functions.fourier_features.base"]], "gpflux.layers.basis_functions.fourier_features": [[15, "module-gpflux.layers.basis_functions.fourier_features"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian": [[16, "module-gpflux.layers.basis_functions.fourier_features.quadrature.gaussian"]], "gpflux.layers.basis_functions.fourier_features.quadrature": [[17, "module-gpflux.layers.basis_functions.fourier_features.quadrature"]], "gpflux.layers.basis_functions.fourier_features.random.base": [[18, "module-gpflux.layers.basis_functions.fourier_features.random.base"]], "gpflux.layers.basis_functions.fourier_features.random": [[19, "module-gpflux.layers.basis_functions.fourier_features.random"]], "gpflux.layers.basis_functions.fourier_features.random.orthogonal": [[20, "module-gpflux.layers.basis_functions.fourier_features.random.orthogonal"]], "gpflux.layers.basis_functions.fourier_features.utils": [[21, "module-gpflux.layers.basis_functions.fourier_features.utils"]], "gpflux.layers.basis_functions": [[22, "module-gpflux.layers.basis_functions"]], "gpflux.layers.bayesian_dense_layer": [[23, "module-gpflux.layers.bayesian_dense_layer"]], "gpflux.layers.gp_layer": [[24, "module-gpflux.layers.gp_layer"]], "Todo": [[24, "id1"], [25, "id1"], [25, "id3"], [25, "id4"], [26, "id2"], [27, "id1"], [33, "id1"], [34, "id1"]], "gpflux.layers": [[25, "module-gpflux.layers"]], "gpflux.layers.latent_variable_layer": [[26, "module-gpflux.layers.latent_variable_layer"]], "gpflux.layers.likelihood_layer": [[27, "module-gpflux.layers.likelihood_layer"]], "gpflux.layers.trackable_layer": [[28, "module-gpflux.layers.trackable_layer"]], "gpflux.losses": [[29, "module-gpflux.losses"]], "gpflux.math": [[30, "module-gpflux.math"]], "gpflux.models.deep_gp": [[31, "module-gpflux.models.deep_gp"]], "gpflux.models": [[32, "module-gpflux.models"]], "gpflux.optimization": [[33, "module-gpflux.optimization"]], "gpflux.optimization.keras_natgrad": [[34, "module-gpflux.optimization.keras_natgrad"]], "gpflux.runtime_checks": [[35, "module-gpflux.runtime_checks"]], "gpflux.sampling": [[36, "module-gpflux.sampling"]], "gpflux.sampling.kernel_with_feature_decomposition": [[37, "module-gpflux.sampling.kernel_with_feature_decomposition"]], "gpflux.sampling.sample": [[38, "module-gpflux.sampling.sample"]], "gpflux.sampling.utils": [[39, "module-gpflux.sampling.utils"]], "gpflux.types": [[40, "module-gpflux.types"]], "gpflux.version": [[41, "module-gpflux.version"]], "Welcome to GPflux": [[42, "welcome-to-gpflux"]], "Getting started": [[42, "getting-started"]], "Installation": [[42, "installation"]], "Latest release from PyPI": [[42, "latest-release-from-pypi"]], "Latest development release from GitHub": [[42, "latest-development-release-from-github"]], "Join the community": [[42, "join-the-community"]], "Bibliography": [[42, "bibliography"]], "Benchmarks": [[43, "Benchmarks"]], "Deep Gaussian processes with Latent Variables": [[44, "Deep-Gaussian-processes-with-Latent-Variables"]], "Load data": [[44, "Load-data"]], "Standard single layer Sparse Variational GP": [[44, "Standard-single-layer-Sparse-Variational-GP"]], "Latent Variable Layer": [[44, "Latent-Variable-Layer"]], "First GP layer": [[44, "First-GP-layer"]], "Second GP layer": [[44, "Second-GP-layer"]], "Fit": [[44, "Fit"]], "Prediction and plotting code": [[44, "Prediction-and-plotting-code"]], "Conclusion": [[44, "Conclusion"]], "Deep GP samples": [[45, "Deep-GP-samples"]], "Constructing the layers": [[45, "Constructing-the-layers"]], "Propagating samples through the layers": [[45, "Propagating-samples-through-the-layers"]], "Visualising samples": [[45, "Visualising-samples"]], "Efficient Posterior Gaussian Process Sampling": [[46, "Efficient-Posterior-Gaussian-Process-Sampling"]], "Efficient sampling with Gaussian processes and Random Fourier Features": [[47, "Efficient-sampling-with-Gaussian-processes-and-Random-Fourier-Features"]], "Load Snelson dataset": [[47, "Load-Snelson-dataset"], [49, "Load-Snelson-dataset"]], "Setting up the kernel and its feature decomposition": [[47, "Setting-up-the-kernel-and-its-feature-decomposition"]], "Building and training the single-layer GP": [[47, "Building-and-training-the-single-layer-GP"]], "Initialise the single-layer GP": [[47, "Initialise-the-single-layer-GP"]], "Fit model to data": [[47, "Fit-model-to-data"]], "Drawing samples": [[47, "Drawing-samples"]], "Why GPflux is a modern (deep) GP library": [[48, "Why-GPflux-is-a-modern-(deep)-GP-library"]], "Setting up the dataset and model": [[48, "Setting-up-the-dataset-and-model"]], "Motorcycle: a toy one-dimensional dataset": [[48, "Motorcycle:-a-toy-one-dimensional-dataset"]], "Two-layer deep GP": [[48, "Two-layer-deep-GP"]], "Training: mini-batching, callbacks, checkpoints and monitoring": [[48, "Training:-mini-batching,-callbacks,-checkpoints-and-monitoring"]], "Post-training: saving, loading, and serving the model": [[48, "Post-training:-saving,-loading,-and-serving-the-model"]], "Hybrid Deep GP models: combining GP and Neural Network layers": [[49, "Hybrid-Deep-GP-models:-combining-GP-and-Neural-Network-layers"]], "Initialize the GP Layer": [[49, "Initialize-the-GP-Layer"]], "Sequential Keras model with GP and Neural net layers": [[49, "Sequential-Keras-model-with-GP-and-Neural-net-layers"]], "Introduction to GPflux": [[50, "Introduction-to-GPflux"]], "The motorcycle dataset": [[50, "The-motorcycle-dataset"]], "Single-layer GP": [[50, "Single-layer-GP"]], "Two-layer deep Gaussian process": [[50, "Two-layer-deep-Gaussian-process"]], "References": [[50, "References"]], "Keras integration": [[51, "Keras-integration"]], "Weight Space Approximation with Random Fourier Features": [[52, "Weight-Space-Approximation-with-Random-Fourier-Features"]], "Tutorials": [[53, "tutorials"]], "Introductory": [[53, null]], "Advanced": [[53, null]], "Sampling": [[53, null]]}, "indexentries": {"gpflux": [[0, "module-gpflux"], [13, "module-gpflux"]], "module": [[0, "module-gpflux"], [2, "module-gpflux.architectures.constant_input_dim_deep_gp"], [3, "module-gpflux.architectures"], [4, "module-gpflux.callbacks"], [5, "module-gpflux.encoders.directly_parameterized_encoder"], [6, "module-gpflux.encoders"], [7, "module-gpflux.exceptions"], [8, "module-gpflux.experiment_support.ci_utils"], [9, "module-gpflux.experiment_support"], [10, "module-gpflux.experiment_support.plotting"], [11, "module-gpflux.experiment_support.tensorboard"], [12, "module-gpflux.helpers"], [13, "module-gpflux"], [14, "module-gpflux.layers.basis_functions.fourier_features.base"], [15, "module-gpflux.layers.basis_functions.fourier_features"], [16, "module-gpflux.layers.basis_functions.fourier_features.quadrature.gaussian"], [17, "module-gpflux.layers.basis_functions.fourier_features.quadrature"], [18, "module-gpflux.layers.basis_functions.fourier_features.random.base"], [19, "module-gpflux.layers.basis_functions.fourier_features.random"], [20, "module-gpflux.layers.basis_functions.fourier_features.random.orthogonal"], [21, "module-gpflux.layers.basis_functions.fourier_features.utils"], [22, "module-gpflux.layers.basis_functions"], [23, "module-gpflux.layers.bayesian_dense_layer"], [24, "module-gpflux.layers.gp_layer"], [25, "module-gpflux.layers"], [26, "module-gpflux.layers.latent_variable_layer"], [27, "module-gpflux.layers.likelihood_layer"], [28, "module-gpflux.layers.trackable_layer"], [29, "module-gpflux.losses"], [30, "module-gpflux.math"], [31, "module-gpflux.models.deep_gp"], [32, "module-gpflux.models"], [33, "module-gpflux.optimization"], [34, "module-gpflux.optimization.keras_natgrad"], [35, "module-gpflux.runtime_checks"], [36, "module-gpflux.sampling"], [37, "module-gpflux.sampling.kernel_with_feature_decomposition"], [38, "module-gpflux.sampling.sample"], [39, "module-gpflux.sampling.utils"], [40, "module-gpflux.types"], [41, "module-gpflux.version"]], "config (class in gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config"]], "_construct_kernel() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp._construct_kernel"]], "build_constant_input_dim_deep_gp() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.build_constant_input_dim_deep_gp"]], "gpflux.architectures.constant_input_dim_deep_gp": [[2, "module-gpflux.architectures.constant_input_dim_deep_gp"]], "inner_layer_qsqrt_factor (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.inner_layer_qsqrt_factor"], [3, "gpflux.architectures.Config.inner_layer_qsqrt_factor"]], "likelihood_noise_variance (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.likelihood_noise_variance"], [3, "gpflux.architectures.Config.likelihood_noise_variance"]], "num_inducing (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.num_inducing"], [3, "gpflux.architectures.Config.num_inducing"]], "whiten (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.whiten"], [3, "gpflux.architectures.Config.whiten"]], "config (class in gpflux.architectures)": [[3, "gpflux.architectures.Config"]], "build_constant_input_dim_deep_gp() (in module gpflux.architectures)": [[3, "gpflux.architectures.build_constant_input_dim_deep_gp"]], "gpflux.architectures": [[3, "module-gpflux.architectures"]], "tensorboard (class in gpflux.callbacks)": [[4, "gpflux.callbacks.TensorBoard"]], "gpflux.callbacks": [[4, "module-gpflux.callbacks"]], "keywords_to_monitor (tensorboard attribute)": [[4, "gpflux.callbacks.TensorBoard.keywords_to_monitor"]], "log_dir (tensorboard attribute)": [[4, "gpflux.callbacks.TensorBoard.log_dir"]], "on_epoch_end() (tensorboard method)": [[4, "gpflux.callbacks.TensorBoard.on_epoch_end"]], "on_train_batch_end() (tensorboard method)": [[4, "gpflux.callbacks.TensorBoard.on_train_batch_end"]], "set_model() (tensorboard method)": [[4, "gpflux.callbacks.TensorBoard.set_model"]], "update_freq (tensorboard attribute)": [[4, "gpflux.callbacks.TensorBoard.update_freq"]], "directlyparameterizednormaldiag (class in gpflux.encoders.directly_parameterized_encoder)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag"]], "call() (directlyparameterizednormaldiag method)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag.call"], [6, "gpflux.encoders.DirectlyParameterizedNormalDiag.call"]], "gpflux.encoders.directly_parameterized_encoder": [[5, "module-gpflux.encoders.directly_parameterized_encoder"]], "means (directlyparameterizednormaldiag attribute)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag.means"], [6, "gpflux.encoders.DirectlyParameterizedNormalDiag.means"]], "stds (directlyparameterizednormaldiag attribute)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag.stds"], [6, "gpflux.encoders.DirectlyParameterizedNormalDiag.stds"]], "directlyparameterizednormaldiag (class in gpflux.encoders)": [[6, "gpflux.encoders.DirectlyParameterizedNormalDiag"]], "gpflux.encoders": [[6, "module-gpflux.encoders"]], "encoderinitializationerror": [[7, "gpflux.exceptions.EncoderInitializationError"]], "gplayerincompatibilityexception": [[7, "gpflux.exceptions.GPLayerIncompatibilityException"]], "gpflux.exceptions": [[7, "module-gpflux.exceptions"]], "gpflux.experiment_support.ci_utils": [[8, "module-gpflux.experiment_support.ci_utils"]], "is_continuous_integration() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.is_continuous_integration"]], "notebook_list() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.notebook_list"]], "notebook_niter() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.notebook_niter"]], "notebook_range() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.notebook_range"]], "gpflux.experiment_support": [[9, "module-gpflux.experiment_support"]], "gpflux.experiment_support.plotting": [[10, "module-gpflux.experiment_support.plotting"]], "plot_layer() (in module gpflux.experiment_support.plotting)": [[10, "gpflux.experiment_support.plotting.plot_layer"]], "event (class in gpflux.experiment_support.tensorboard)": [[11, "gpflux.experiment_support.tensorboard.Event"]], "gpflux.experiment_support.tensorboard": [[11, "module-gpflux.experiment_support.tensorboard"]], "tensorboard_event_iterator() (in module gpflux.experiment_support.tensorboard)": [[11, "gpflux.experiment_support.tensorboard.tensorboard_event_iterator"]], "construct_basic_inducing_variables() (in module gpflux.helpers)": [[12, "gpflux.helpers.construct_basic_inducing_variables"]], "construct_basic_kernel() (in module gpflux.helpers)": [[12, "gpflux.helpers.construct_basic_kernel"]], "construct_gp_layer() (in module gpflux.helpers)": [[12, "gpflux.helpers.construct_gp_layer"]], "construct_mean_function() (in module gpflux.helpers)": [[12, "gpflux.helpers.construct_mean_function"]], "gpflux.helpers": [[12, "module-gpflux.helpers"]], "make_dataclass_from_class() (in module gpflux.helpers)": [[12, "gpflux.helpers.make_dataclass_from_class"]], "xavier_initialization_numpy() (in module gpflux.helpers)": [[12, "gpflux.helpers.xavier_initialization_numpy"]], "fourierfeaturesbase (class in gpflux.layers.basis_functions.fourier_features.base)": [[14, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase"]], "_compute_bases() (fourierfeaturesbase method)": [[14, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase._compute_bases"]], "_compute_constant() (fourierfeaturesbase method)": [[14, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase._compute_constant"]], "call() (fourierfeaturesbase method)": [[14, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase.call"]], "compute_output_shape() (fourierfeaturesbase method)": [[14, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase.compute_output_shape"]], "get_config() (fourierfeaturesbase method)": [[14, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase.get_config"]], "gpflux.layers.basis_functions.fourier_features.base": [[14, "module-gpflux.layers.basis_functions.fourier_features.base"]], "orthogonalrandomfeatures (class in gpflux.layers.basis_functions.fourier_features)": [[15, "gpflux.layers.basis_functions.fourier_features.OrthogonalRandomFeatures"]], "quadraturefourierfeatures (class in gpflux.layers.basis_functions.fourier_features)": [[15, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures"]], "randomfourierfeatures (class in gpflux.layers.basis_functions.fourier_features)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures"]], "randomfourierfeaturescosine (class in gpflux.layers.basis_functions.fourier_features)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine"]], "_compute_bases() (quadraturefourierfeatures method)": [[15, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures._compute_bases"], [16, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures._compute_bases"], [17, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures._compute_bases"]], "_compute_bases() (randomfourierfeatures method)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures._compute_bases"], [18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeatures._compute_bases"], [19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures._compute_bases"]], "_compute_bases() (randomfourierfeaturescosine method)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine._compute_bases"], [18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesCosine._compute_bases"], [19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine._compute_bases"]], "_compute_constant() (quadraturefourierfeatures method)": [[15, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures._compute_constant"], [16, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures._compute_constant"], [17, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures._compute_constant"]], "_compute_constant() (randomfourierfeatures method)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures._compute_constant"], [18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeatures._compute_constant"], [19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures._compute_constant"]], "_compute_constant() (randomfourierfeaturescosine method)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine._compute_constant"], [18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesCosine._compute_constant"], [19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine._compute_constant"]], "build() (quadraturefourierfeatures method)": [[15, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures.build"], [16, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures.build"], [17, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures.build"]], "build() (randomfourierfeaturescosine method)": [[15, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine.build"], [18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesCosine.build"], [19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine.build"]], "gpflux.layers.basis_functions.fourier_features": [[15, "module-gpflux.layers.basis_functions.fourier_features"]], "quadraturefourierfeatures (class in gpflux.layers.basis_functions.fourier_features.quadrature.gaussian)": [[16, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian": [[16, "module-gpflux.layers.basis_functions.fourier_features.quadrature.gaussian"]], "quadraturefourierfeatures (class in gpflux.layers.basis_functions.fourier_features.quadrature)": [[17, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures"]], "gpflux.layers.basis_functions.fourier_features.quadrature": [[17, "module-gpflux.layers.basis_functions.fourier_features.quadrature"]], "randomfourierfeatures (class in gpflux.layers.basis_functions.fourier_features.random.base)": [[18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeatures"]], "randomfourierfeaturesbase (class in gpflux.layers.basis_functions.fourier_features.random.base)": [[18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesBase"]], "randomfourierfeaturescosine (class in gpflux.layers.basis_functions.fourier_features.random.base)": [[18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesCosine"]], "_sample_students_t() (in module gpflux.layers.basis_functions.fourier_features.random.base)": [[18, "gpflux.layers.basis_functions.fourier_features.random.base._sample_students_t"]], "build() (randomfourierfeaturesbase method)": [[18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesBase.build"]], "gpflux.layers.basis_functions.fourier_features.random.base": [[18, "module-gpflux.layers.basis_functions.fourier_features.random.base"]], "rff_constant() (randomfourierfeaturesbase static method)": [[18, "gpflux.layers.basis_functions.fourier_features.random.base.RandomFourierFeaturesBase.rff_constant"]], "orthogonalrandomfeatures (class in gpflux.layers.basis_functions.fourier_features.random)": [[19, "gpflux.layers.basis_functions.fourier_features.random.OrthogonalRandomFeatures"]], "randomfourierfeatures (class in gpflux.layers.basis_functions.fourier_features.random)": [[19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures"]], "randomfourierfeaturescosine (class in gpflux.layers.basis_functions.fourier_features.random)": [[19, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine"]], "gpflux.layers.basis_functions.fourier_features.random": [[19, "module-gpflux.layers.basis_functions.fourier_features.random"]], "orthogonalrandomfeatures (class in gpflux.layers.basis_functions.fourier_features.random.orthogonal)": [[20, "gpflux.layers.basis_functions.fourier_features.random.orthogonal.OrthogonalRandomFeatures"]], "_ceil_divide() (in module gpflux.layers.basis_functions.fourier_features.random.orthogonal)": [[20, "gpflux.layers.basis_functions.fourier_features.random.orthogonal._ceil_divide"]], "_sample_chi() (in module gpflux.layers.basis_functions.fourier_features.random.orthogonal)": [[20, "gpflux.layers.basis_functions.fourier_features.random.orthogonal._sample_chi"]], "_sample_chi_squared() (in module gpflux.layers.basis_functions.fourier_features.random.orthogonal)": [[20, "gpflux.layers.basis_functions.fourier_features.random.orthogonal._sample_chi_squared"]], "gpflux.layers.basis_functions.fourier_features.random.orthogonal": [[20, "module-gpflux.layers.basis_functions.fourier_features.random.orthogonal"]], "_bases_concat() (in module gpflux.layers.basis_functions.fourier_features.utils)": [[21, "gpflux.layers.basis_functions.fourier_features.utils._bases_concat"]], "_bases_cosine() (in module gpflux.layers.basis_functions.fourier_features.utils)": [[21, "gpflux.layers.basis_functions.fourier_features.utils._bases_cosine"]], "gpflux.layers.basis_functions.fourier_features.utils": [[21, "module-gpflux.layers.basis_functions.fourier_features.utils"]], "gpflux.layers.basis_functions": [[22, "module-gpflux.layers.basis_functions"]], "bayesiandenselayer (class in gpflux.layers.bayesian_dense_layer)": [[23, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer"]], "build() (bayesiandenselayer method)": [[23, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.build"], [25, "gpflux.layers.BayesianDenseLayer.build"]], "call() (bayesiandenselayer method)": [[23, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.call"], [25, "gpflux.layers.BayesianDenseLayer.call"]], "gpflux.layers.bayesian_dense_layer": [[23, "module-gpflux.layers.bayesian_dense_layer"]], "predict_samples() (bayesiandenselayer method)": [[23, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.predict_samples"], [25, "gpflux.layers.BayesianDenseLayer.predict_samples"]], "prior_kl() (bayesiandenselayer method)": [[23, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.prior_kl"], [25, "gpflux.layers.BayesianDenseLayer.prior_kl"]], "gplayer (class in gpflux.layers.gp_layer)": [[24, "gpflux.layers.gp_layer.GPLayer"]], "_convert_to_tensor_fn() (gplayer method)": [[24, "gpflux.layers.gp_layer.GPLayer._convert_to_tensor_fn"], [25, "gpflux.layers.GPLayer._convert_to_tensor_fn"]], "_make_distribution_fn() (gplayer method)": [[24, "gpflux.layers.gp_layer.GPLayer._make_distribution_fn"], [25, "gpflux.layers.GPLayer._make_distribution_fn"]], "call() (gplayer method)": [[24, "gpflux.layers.gp_layer.GPLayer.call"], [25, "gpflux.layers.GPLayer.call"]], "full_cov (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.full_cov"], [25, "gpflux.layers.GPLayer.full_cov"]], "full_output_cov (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.full_output_cov"], [25, "gpflux.layers.GPLayer.full_output_cov"]], "gpflux.layers.gp_layer": [[24, "module-gpflux.layers.gp_layer"]], "num_data (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.num_data"], [25, "gpflux.layers.GPLayer.num_data"]], "num_samples (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.num_samples"], [25, "gpflux.layers.GPLayer.num_samples"]], "predict() (gplayer method)": [[24, "gpflux.layers.gp_layer.GPLayer.predict"], [25, "gpflux.layers.GPLayer.predict"]], "prior_kl() (gplayer method)": [[24, "gpflux.layers.gp_layer.GPLayer.prior_kl"], [25, "gpflux.layers.GPLayer.prior_kl"]], "q_mu (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.q_mu"], [25, "gpflux.layers.GPLayer.q_mu"]], "q_sqrt (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.q_sqrt"], [25, "gpflux.layers.GPLayer.q_sqrt"]], "sample() (gplayer method)": [[24, "gpflux.layers.gp_layer.GPLayer.sample"], [25, "gpflux.layers.GPLayer.sample"]], "whiten (gplayer attribute)": [[24, "gpflux.layers.gp_layer.GPLayer.whiten"], [25, "gpflux.layers.GPLayer.whiten"]], "bayesiandenselayer (class in gpflux.layers)": [[25, "gpflux.layers.BayesianDenseLayer"]], "gplayer (class in gpflux.layers)": [[25, "gpflux.layers.GPLayer"]], "latentvariablelayer (class in gpflux.layers)": [[25, "gpflux.layers.LatentVariableLayer"]], "layerwithobservations (class in gpflux.layers)": [[25, "gpflux.layers.LayerWithObservations"]], "likelihoodlayer (class in gpflux.layers)": [[25, "gpflux.layers.LikelihoodLayer"]], "trackablelayer (class in gpflux.layers)": [[25, "gpflux.layers.TrackableLayer"]], "_inference_latent_samples_and_loss() (latentvariablelayer method)": [[25, "gpflux.layers.LatentVariableLayer._inference_latent_samples_and_loss"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer._inference_latent_samples_and_loss"]], "_inference_posteriors() (latentvariablelayer method)": [[25, "gpflux.layers.LatentVariableLayer._inference_posteriors"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer._inference_posteriors"]], "_local_kls() (latentvariablelayer method)": [[25, "gpflux.layers.LatentVariableLayer._local_kls"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer._local_kls"]], "_prediction_latent_samples() (latentvariablelayer method)": [[25, "gpflux.layers.LatentVariableLayer._prediction_latent_samples"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer._prediction_latent_samples"]], "call() (latentvariablelayer method)": [[25, "gpflux.layers.LatentVariableLayer.call"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer.call"]], "call() (layerwithobservations method)": [[25, "gpflux.layers.LayerWithObservations.call"], [26, "gpflux.layers.latent_variable_layer.LayerWithObservations.call"]], "call() (likelihoodlayer method)": [[25, "gpflux.layers.LikelihoodLayer.call"], [27, "gpflux.layers.likelihood_layer.LikelihoodLayer.call"]], "compositor (latentvariablelayer attribute)": [[25, "gpflux.layers.LatentVariableLayer.compositor"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer.compositor"]], "encoder (latentvariablelayer attribute)": [[25, "gpflux.layers.LatentVariableLayer.encoder"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer.encoder"]], "gpflux.layers": [[25, "module-gpflux.layers"]], "prior (latentvariablelayer attribute)": [[25, "gpflux.layers.LatentVariableLayer.prior"], [26, "gpflux.layers.latent_variable_layer.LatentVariableLayer.prior"]], "latentvariablelayer (class in gpflux.layers.latent_variable_layer)": [[26, "gpflux.layers.latent_variable_layer.LatentVariableLayer"]], "layerwithobservations (class in gpflux.layers.latent_variable_layer)": [[26, "gpflux.layers.latent_variable_layer.LayerWithObservations"]], "gpflux.layers.latent_variable_layer": [[26, "module-gpflux.layers.latent_variable_layer"]], "likelihoodlayer (class in gpflux.layers.likelihood_layer)": [[27, "gpflux.layers.likelihood_layer.LikelihoodLayer"]], "likelihoodoutputs (class in gpflux.layers.likelihood_layer)": [[27, "gpflux.layers.likelihood_layer.LikelihoodOutputs"]], "gpflux.layers.likelihood_layer": [[27, "module-gpflux.layers.likelihood_layer"]], "trackablelayer (class in gpflux.layers.trackable_layer)": [[28, "gpflux.layers.trackable_layer.TrackableLayer"]], "gpflux.layers.trackable_layer": [[28, "module-gpflux.layers.trackable_layer"]], "likelihoodloss (class in gpflux.losses)": [[29, "gpflux.losses.LikelihoodLoss"]], "call() (likelihoodloss method)": [[29, "gpflux.losses.LikelihoodLoss.call"]], "gpflux.losses": [[29, "module-gpflux.losses"]], "_cholesky_with_jitter() (in module gpflux.math)": [[30, "gpflux.math._cholesky_with_jitter"]], "compute_a_inv_b() (in module gpflux.math)": [[30, "gpflux.math.compute_A_inv_b"]], "gpflux.math": [[30, "module-gpflux.math"]], "deepgp (class in gpflux.models.deep_gp)": [[31, "gpflux.models.deep_gp.DeepGP"]], "_evaluate_deep_gp() (deepgp method)": [[31, "gpflux.models.deep_gp.DeepGP._evaluate_deep_gp"], [32, "gpflux.models.DeepGP._evaluate_deep_gp"]], "_evaluate_likelihood() (deepgp method)": [[31, "gpflux.models.deep_gp.DeepGP._evaluate_likelihood"], [32, "gpflux.models.DeepGP._evaluate_likelihood"]], "_validate_dtype() (deepgp static method)": [[31, "gpflux.models.deep_gp.DeepGP._validate_dtype"], [32, "gpflux.models.DeepGP._validate_dtype"]], "_validate_num_data() (deepgp static method)": [[31, "gpflux.models.deep_gp.DeepGP._validate_num_data"], [32, "gpflux.models.DeepGP._validate_num_data"]], "as_prediction_model() (deepgp method)": [[31, "gpflux.models.deep_gp.DeepGP.as_prediction_model"], [32, "gpflux.models.DeepGP.as_prediction_model"]], "as_training_model() (deepgp method)": [[31, "gpflux.models.deep_gp.DeepGP.as_training_model"], [32, "gpflux.models.DeepGP.as_training_model"]], "default_model_class (deepgp attribute)": [[31, "gpflux.models.deep_gp.DeepGP.default_model_class"], [32, "gpflux.models.DeepGP.default_model_class"]], "elbo() (deepgp method)": [[31, "gpflux.models.deep_gp.DeepGP.elbo"], [32, "gpflux.models.DeepGP.elbo"]], "f_layers (deepgp attribute)": [[31, "gpflux.models.deep_gp.DeepGP.f_layers"], [32, "gpflux.models.DeepGP.f_layers"]], "gpflux.models.deep_gp": [[31, "module-gpflux.models.deep_gp"]], "likelihood_layer (deepgp attribute)": [[31, "gpflux.models.deep_gp.DeepGP.likelihood_layer"], [32, "gpflux.models.DeepGP.likelihood_layer"]], "num_data (deepgp attribute)": [[31, "gpflux.models.deep_gp.DeepGP.num_data"], [32, "gpflux.models.DeepGP.num_data"]], "predict_f() (deepgp method)": [[31, "gpflux.models.deep_gp.DeepGP.predict_f"], [32, "gpflux.models.DeepGP.predict_f"]], "deepgp (class in gpflux.models)": [[32, "gpflux.models.DeepGP"]], "gpflux.models": [[32, "module-gpflux.models"]], "natgradmodel (class in gpflux.optimization)": [[33, "gpflux.optimization.NatGradModel"]], "natgradwrapper (class in gpflux.optimization)": [[33, "gpflux.optimization.NatGradWrapper"]], "call() (natgradwrapper method)": [[33, "gpflux.optimization.NatGradWrapper.call"], [34, "gpflux.optimization.keras_natgrad.NatGradWrapper.call"]], "gpflux.optimization": [[33, "module-gpflux.optimization"]], "natgrad_layers (natgradmodel property)": [[33, "gpflux.optimization.NatGradModel.natgrad_layers"], [34, "gpflux.optimization.keras_natgrad.NatGradModel.natgrad_layers"]], "optimizer (natgradmodel property)": [[33, "gpflux.optimization.NatGradModel.optimizer"], [34, "gpflux.optimization.keras_natgrad.NatGradModel.optimizer"]], "train_step() (natgradmodel method)": [[33, "gpflux.optimization.NatGradModel.train_step"], [34, "gpflux.optimization.keras_natgrad.NatGradModel.train_step"]], "natgradmodel (class in gpflux.optimization.keras_natgrad)": [[34, "gpflux.optimization.keras_natgrad.NatGradModel"]], "natgradwrapper (class in gpflux.optimization.keras_natgrad)": [[34, "gpflux.optimization.keras_natgrad.NatGradWrapper"]], "gpflux.optimization.keras_natgrad": [[34, "module-gpflux.optimization.keras_natgrad"]], "gpflux.runtime_checks": [[35, "module-gpflux.runtime_checks"]], "verify_compatibility() (in module gpflux.runtime_checks)": [[35, "gpflux.runtime_checks.verify_compatibility"]], "kernelwithfeaturedecomposition (class in gpflux.sampling)": [[36, "gpflux.sampling.KernelWithFeatureDecomposition"]], "efficient_sample (in module gpflux.sampling)": [[36, "gpflux.sampling.efficient_sample"]], "feature_coefficients (kernelwithfeaturedecomposition property)": [[36, "gpflux.sampling.KernelWithFeatureDecomposition.feature_coefficients"], [37, "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition.feature_coefficients"]], "feature_functions (kernelwithfeaturedecomposition property)": [[36, "gpflux.sampling.KernelWithFeatureDecomposition.feature_functions"], [37, "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition.feature_functions"]], "gpflux.sampling": [[36, "module-gpflux.sampling"]], "k() (_approximatekernel method)": [[37, "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel.K"]], "k_diag() (_approximatekernel method)": [[37, "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel.K_diag"]], "kernelwithfeaturedecomposition (class in gpflux.sampling.kernel_with_feature_decomposition)": [[37, "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition"]], "_approximatekernel (class in gpflux.sampling.kernel_with_feature_decomposition)": [[37, "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel"]], "gpflux.sampling.kernel_with_feature_decomposition": [[37, "module-gpflux.sampling.kernel_with_feature_decomposition"]], "sample (class in gpflux.sampling.sample)": [[38, "gpflux.sampling.sample.Sample"]], "__add__() (sample method)": [[38, "gpflux.sampling.sample.Sample.__add__"]], "__call__() (sample method)": [[38, "gpflux.sampling.sample.Sample.__call__"]], "_efficient_sample_conditional_gaussian() (in module gpflux.sampling.sample)": [[38, "gpflux.sampling.sample._efficient_sample_conditional_gaussian"]], "_efficient_sample_matheron_rule() (in module gpflux.sampling.sample)": [[38, "gpflux.sampling.sample._efficient_sample_matheron_rule"]], "efficient_sample (in module gpflux.sampling.sample)": [[38, "gpflux.sampling.sample.efficient_sample"]], "gpflux.sampling.sample": [[38, "module-gpflux.sampling.sample"]], "draw_conditional_sample() (in module gpflux.sampling.utils)": [[39, "gpflux.sampling.utils.draw_conditional_sample"]], "gpflux.sampling.utils": [[39, "module-gpflux.sampling.utils"]], "observationtype (in module gpflux.types)": [[40, "gpflux.types.ObservationType"]], "shapetype (in module gpflux.types)": [[40, "gpflux.types.ShapeType"]], "gpflux.types": [[40, "module-gpflux.types"]], "unwrap_dist() (in module gpflux.types)": [[40, "gpflux.types.unwrap_dist"]], "gpflux.version": [[41, "module-gpflux.version"]]}})