<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="2" failures="0" hostname="sebastianp-lptp" name="pytest" skipped="0" tests="2" time="3.073" timestamp="2022-11-24T16:27:27.022886"><testcase classname="" name="tests.gpflux.test_runtime_checks" time="0.000"><error message="collection failure">tests/gpflux/test_runtime_checks.py:52: in &lt;module&gt;
    @pytest.mark.parametrize("inducing_variable", make_inducing_variables(3))
tests/gpflux/test_runtime_checks.py:43: in make_inducing_variables
    input_dim=input_dim,
gpflux/helpers.py:149: in construct_basic_inducing_variables
    z_init_i = np.random.uniform(-0.5, 0.5, (num_inducing, input_dim)).astype(
mtrand.pyx:1118: in numpy.random.mtrand.RandomState.uniform
    ???
_common.pyx:598: in numpy.random._common.cont
    ???
E   TypeError: 'list' object cannot be interpreted as an integer</error></testcase><testcase classname="" name="tests.gpflux.architectures.test_constant_input_dim_deep_gp" time="0.000"><error message="collection failure">ImportError while importing test module '/home/sebastian.popescu/Desktop/my_code/GPflux/tests/gpflux/architectures/test_constant_input_dim_deep_gp.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.7/importlib/__init__.py:127: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests/gpflux/architectures/test_constant_input_dim_deep_gp.py:5: in &lt;module&gt;
    from gpflux.architectures import Config, build_constant_input_dim_deep_gp
E   ImportError: cannot import name 'Config' from 'gpflux.architectures' (/home/sebastian.popescu/Desktop/my_code/GPflux/gpflux/architectures/__init__.py)</error></testcase></testsuite></testsuites>